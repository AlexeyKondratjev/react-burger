{"version":3,"sources":["components/App/App.module.css","components/ModalOverlay/ModalOverlay.module.css","pages/MainPage/MainPage.module.css","components/Loader/Loader.module.css","components/ProfileForm/ProfileForm.module.css","components/OrderStats/OrderStats.module.css","components/OrderDetails/OrderDetails.module.css","components/AppHeader/AppHeader.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","services/hooks/hooks.ts","components/IngredientDetails/IngredientDetails.tsx","components/ProtectedRoute/ProtectedRoute.tsx","utils/constants.ts","utils/cookie.ts","utils/api.ts","services/actions/action-types/auth.ts","services/actions/auth.ts","pages/LoginPage/LoginPage.tsx","components/Ingredient/Ingredient.tsx","components/Loader/LoaderSvg.tsx","components/Loader/Loader.tsx","services/actions/action-types/modal.ts","services/actions/modal.ts","components/BurgerIngredients/BurgerIngredients.tsx","services/actions/action-types/constructorIngredients.ts","components/BurgerConstructorItem/BurgerConstructorItem.tsx","services/actions/constructorIngredients.ts","services/actions/action-types/orderData.ts","services/actions/orderData.ts","components/BurgerConstructor/BurgerConstructor.tsx","pages/MainPage/MainPage.tsx","pages/RegistrationPage/RegistrationPage.tsx","pages/ForgotPasswordPage/ForgotPasswordPage.tsx","pages/ResetPasswordPage/ResetPasswordPage.tsx","components/Navigation/Navigation.tsx","components/ProfileForm/ProfileForm.tsx","pages/ProfilePage/ProfilePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/IngredientIcon/IngredientIcon.tsx","utils/utils.ts","utils/interface.tsx","components/Order/Order.tsx","components/OrdersList/OrdersList.tsx","services/actions/action-types/webSocket.ts","services/actions/webSocket.ts","pages/OrdersPage/OrdersPage.tsx","components/OrderStats/OrderStats.tsx","pages/FeedPage/FeedPage.tsx","services/actions/action-types/allIngredients.ts","services/actions/allIngredients.ts","components/OrderInfo/OrderInfo.tsx","components/OrderDetails/OrderDetails.tsx","pages/OrderDetailsPage/OrderDetailsPage.tsx","components/App/App.tsx","services/middleware/webSocketMiddleware.ts","services/reducers/allIngredients.ts","services/reducers/constructorIngredients.ts","services/reducers/orderData.ts","services/reducers/auth.ts","services/reducers/modal.ts","services/reducers/webSocket.ts","services/reducers/index.ts","services/store.tsx","index.tsx","components/AppHeader/AppHeader.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/BurgerConstructor/BurgerConstructor.module.css","components/Navigation/Navigation.module.css","components/Order/Order.module.css","components/IngredientDetails/IngredientDetails.module.css","pages/NotFoundPage/NotFoundPage.module.css","pages/commonStyles.module.css","components/Ingredient/Ingredient.module.css","components/Modal/Modal.module.css","components/IngredientIcon/IngredientIcon.module.css","components/OrderInfo/OrderInfo.module.css","components/BurgerConstructorItem/BurgerConstructorItem.module.css","pages/ProfilePage/ProfilePage.module.css","pages/OrdersPage/OrdersPage.module.css","components/OrdersList/OrdersList.module.css","pages/FeedPage/FeedPage.module.css"],"names":["module","exports","AppHeader","location","useLocation","className","styles","header","content","list","to","exact","link","activeClassName","activeLink","type","pathname","personalCab","ModalOverlay","onClick","modalOverlayStyles","overlay","Modal","children","onClose","title","useEffect","closeByEsc","event","key","document","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyles","modalContainer","titleButtonGroup","closeButton","getElementById","useDispatch","dispatchHook","useSelector","selectorHook","IngredientDetails","id","useParams","allIngredients","store","ingredientData","find","item","_id","src","image_large","alt","name","image","propertiesList","propertiesListItem","calories","proteins","fat","carbohydrates","ProtectedRoute","onlyUnAuth","rest","user","auth","from","state","API_PATH_BASE_URL","USE_IN_VIEW_OPTIONS","threshold","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","deleteCookie","checkReponse","res","ok","json","then","err","Promise","reject","fetchWithRefresh","url","options","fetch","message","updateTokenRequest","accessToken","refreshToken","split","localStorage","setItem","console","log","headers","authorization","ingredientsId","method","body","JSON","stringify","ingredients","email","password","token","getItem","code","REGISTRATION_USER_REQUEST","REGISTRATION_USER_SUCCESS","REGISTRATION_USER_FAILED","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","GET_USERDATA_REQUEST","GET_USERDATA_SUCCESS","GET_USERDATA_FAILED","REFRESH_USERDATA_REQUEST","REFRESH_USERDATA_SUCCESS","REFRESH_USERDATA_FAILED","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILED","registerUser","dispatch","signUpUserRequest","data","RegistrationUserSuccessAction","catch","RegistrationUserFailedAction","loginUser","signInUserRequest","LoginUserSuccessAction","LoginUserFailedAction","logoutUser","signOutUserRequest","LogoutUserSuccessAction","LogoutUserFailedAction","forgotPassword","forgotPasswordRequest","ForgotPasswordSuccessAction","ForgotPasswordFailedAction","resetPassword","resetPasswordRequest","ResetPasswordSuccessAction","ResetPasswordFailedAction","getUserData","getUserDataRequest","GetUserDataSuccessAction","GetUserDataFailedAction","refreshUserData","refreshUserDataRequest","RefreshUserDataSuccessAction","RefreshUserDataFailedAction","LoginPage","useState","emailValue","setEmailValue","passwordValue","setPasswordValue","commonStyles","main","container","form","onSubmit","e","preventDefault","placeholder","onChange","target","extraClass","htmlType","size","disabled","navigationBlock","navigationLink","Ingredient","bunItem","constructorIngredients","bun","stuffingItems","stuffing","counter","useMemo","forEach","useDrag","collect","monitor","opacity","isDragging","dragRef","background","ref","style","count","priceGroup","price","LoaderSvg","color","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","attributeName","dur","repeatCount","loaderSizes","small","medium","large","superLarge","Loader","wrapperStyleKey","SET_MODAL","RESET_MODAL","SetModalAction","ResetModalAction","BurgerIngredients","React","current","setCurrent","allIngredientsRequest","getViewedIngredientData","useCallback","getFilteredIngredients","filterCondition","filter","map","useInView","bunListItemRef","bunListItemInView","sauceListItemRef","sauceListItemInView","mainListItemRef","mainListItemInView","inViewHandler","burgerIngredientsStyles","section","tabs","href","active","categoryList","ingredientsList","ADD_BUN_TO_CONSTRUCTOR","ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR","DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR","REORDER_STUFFING_ELEMENTS","CONSTRUCTOR_CLEANUP","BurgerConstructorItem","index","dndRef","useRef","deleteItemHandle","payload","DeleteStuffingElementFromConstructorAction","useDrop","accept","hover","dragIndex","dropIndex","ReorderStuffingElementsAction","isHover","isOver","dropRef","burgerConstructorItemStyles","listItem","hoveredItem","text","thumbnail","handleClose","GET_ORDER_DATA_REQUEST","GET_ORDER_DATA_SUCCESS","GET_ORDER_DATA_FAILED","getOrderData","getOrderDataRequest","orderData","GetOrderDataSuccessAction","BurgerConstructor","history","useHistory","totalPrice","reduce","sum","curr","drop","AddBunToConstructorAction","AddStuffingElementToConstructorAction","Math","random","toString","slice","chosenPositionsListScroll","length","burgerConstructorStyles","positionsList","hoveredList","lockedPosition","isLocked","chosenPositionsList","infoGroup","Object","keys","idArr","push","MainPage","DndProvider","backend","HTML5Backend","RegistrationPage","nameValue","setNameValue","ForgotPasswordPage","isPasswordRecoveryEmailReceived","ResetPasswordPage","isResetPasswordSuccess","resetCodeValue","setResetCodeValue","Navigation","navContainer","navigationLinkActive","switchNavigationFooterText","ProfileForm","loginValue","setLoginValue","onReset","icon","buttonGroup","ProfilePage","profileContainer","NotFoundPage","h1","p1","p2","IngredientIcon","ingredient","numberToRender","iconContainer","getOrderIngredients","ingredientsArr","allIngredientsArr","getOrderPrice","renderOrderStatus","status","statusDone","statusCancelled","Order","array","renderStatus","number","createdAt","orderIngredients","orderPrice","onOrderClick","groupIdDate","dateTimezoneOffset","date","getTimezoneOffset","groupImagesPrice","left","zIndex","groupPrice","toLocaleString","OrdersList","orders","ws","useRouteMatch","path","WS_CONNECTION_OPEN","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSE","WS_CONNECTION_DISCONNECT","WS_GET_MESSAGE","wsInitConnection","wsInitAuthConnection","wsCloseConnection","OrdersPage","wsConnected","ordersListContainer","OrderStats","total","totalToday","ordersStatusDone","ordersStatusPending","displayOrderNumber","ordersArray","isDone","orderDone","ordersBoard","groupList","groupTotal","glowText","FeedPage","GET_ALL_INGREDIENTS_REQUEST","GET_ALL_INGREDIENTS_SUCCESS","GET_ALL_INGREDIENTS_FAILED","getAllIngredients","getAllIngredientsRequest","items","success","OrderInfo","orderId","orderStatus","orderInfoMessage","OrderDetails","order","uniqueIngredients","Array","Set","idContainer","addBox","groupIngredientIcoName","footerContainer","OrderDetailsPage","includes","App","modal","isOpened","orderDataRequest","onOrderInfoModalClose","onOrderDetailsModalClose","appStyles","page","onIngredientModalClose","wsUrl","wsActions","initialState","allIngredientsFailed","registrationRequest","registrationFailed","registrationFailedMessage","loginRequest","loginFailed","loginFailedMessage","logoutRequest","logoutFailed","logoutFailedMessage","forgotPasswordFailed","forgotPasswordMessage","resetPasswordFailed","resetPasswordMessage","getUserDataFailed","getUserDataMessage","refreshUserDataFailed","refreshUserDataMessage","updateTokenFailed","updateTokenMessage","error","rootReducer","combineReducers","action","reorderStuffing","splice","removeItem","wsInit","wsOnOpen","wsOnError","wsOnClose","wsDisconnect","wsOnMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","isConnected","reconnectTimer","next","WebSocket","clearTimeout","close","onopen","onerror","onmessage","parsedData","parse","restParsedData","onclose","setTimeout","createStore","render","StrictMode"],"mappings":"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","file":"static/js/main.fe978b81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__LPFU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ModalOverlay_overlay__3MD1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainPage_main__30DZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superLarge\":\"Loader_superLarge__1rLdb\",\"large\":\"Loader_large__399m5\",\"medium\":\"Loader_medium__2mnpX\",\"small\":\"Loader_small__1l6of\",\"wrapper_superLarge\":\"Loader_wrapper_superLarge__3-rr1\",\"wrapper_large\":\"Loader_wrapper_large__1Bn8n\",\"wrapper_medium\":\"Loader_wrapper_medium__381mG\",\"wrapper_small\":\"Loader_wrapper_small__m7m32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"ProfileForm_buttonGroup__23drT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrderStats_container__2L0sY\",\"ordersBoard\":\"OrderStats_ordersBoard__PuUyL\",\"groupList\":\"OrderStats_groupList__1JLKz\",\"list\":\"OrderStats_list__1nans\",\"listItem\":\"OrderStats_listItem__2KlVx\",\"orderDone\":\"OrderStats_orderDone__w0gDg\",\"groupTotal\":\"OrderStats_groupTotal__3owQ3\",\"glowText\":\"OrderStats_glowText__2yXyp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"OrderDetails_content__1Dvt8\",\"idContainer\":\"OrderDetails_idContainer__2SKSR\",\"ingredientsList\":\"OrderDetails_ingredientsList__1jznG\",\"listItem\":\"OrderDetails_listItem__30tDV\",\"groupIngredientIcoName\":\"OrderDetails_groupIngredientIcoName__2zmqT\",\"footerContainer\":\"OrderDetails_footerContainer__3n23g\",\"container\":\"OrderDetails_container__LIxtg\",\"price\":\"OrderDetails_price__2UWY5\",\"addBox\":\"OrderDetails_addBox__3FxR6\",\"dateTimezoneOffset\":\"OrderDetails_dateTimezoneOffset__2FoZ9\"};","import React, { FC } from 'react';\r\nimport styles from './AppHeader.module.css';\r\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, NavLink, useLocation } from 'react-router-dom';\r\nimport { TLocationState } from '../../services/types/data';\r\n\r\nconst AppHeader: FC = () => {\r\n  const location = useLocation<TLocationState>();\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.content}>\r\n\r\n        <nav>\r\n          <ul className={styles.list}>\r\n            <li className='mt-4 mr-7 mb-4 ml-5'>\r\n              <NavLink to='/' exact={true} className={styles.link} activeClassName={styles.activeLink}>\r\n                <BurgerIcon type={location.pathname === '/' ? 'primary' : 'secondary'} />\r\n                <p className='text text_type_main-default ml-2'>Конструктор</p>\r\n              </NavLink>\r\n            </li>\r\n            <li className='mt-4 mr-5 mb-4 ml-5'>\r\n              <NavLink to='/feed' className={styles.link} activeClassName={styles.activeLink}>\r\n                <ListIcon type={location.pathname === '/feed' ? 'primary' : 'secondary'} />\r\n                <p className='text text_type_main-default ml-2'>Лента заказов</p>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Link to='/'>\r\n          <Logo />\r\n        </Link>\r\n\r\n        <nav className={styles.personalCab}>\r\n          <ul className={styles.list}>\r\n            <li className='mt-4 mr-5 mb-4 ml-5'>\r\n              <NavLink to='/profile' className={styles.link} activeClassName={styles.activeLink}>\r\n                <ProfileIcon type={location.pathname === '/profile' ? 'primary' : 'secondary'} />\r\n                <p className='text text_type_main-default ml-2'>Личный кабинет</p>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { FC } from 'react';\r\nimport { TModalOverlayComponent } from '../../services/types/data';\r\nimport modalOverlayStyles from './ModalOverlay.module.css';\r\n\r\n\r\n\r\nconst ModalOverlay: FC<TModalOverlayComponent> = ({onClick}) => {\r\n  return (\r\n    <div className={modalOverlayStyles.overlay} onClick={onClick}>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ModalOverlay;\r\n","import React, { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport modalStyles from './Modal.module.css';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from '../ModalOverlay/ModalOverlay';\r\nimport { TModalComponent } from '../../services/types/data';\r\n\r\n\r\n\r\nconst Modal: FC<TModalComponent> = ({ children, onClose, title = \"\" }) => {\r\n\r\n  useEffect(() => {\r\n    const closeByEsc = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', closeByEsc);\r\n\r\n    return () => document.removeEventListener('keydown', closeByEsc);\r\n  }, []);\r\n\r\n\r\n\r\n  return ReactDOM.createPortal(\r\n    (\r\n      <>\r\n        <div className={modalStyles.modalContainer}>\r\n          <div className={`${modalStyles.titleButtonGroup} pt-10 pl-10 pr-10`}>\r\n            <h2 className='text text_type_main-large'>{title}</h2>\r\n            <button className={`${modalStyles.closeButton}`} onClick={onClose}>\r\n              <CloseIcon type=\"primary\" />\r\n            </button>\r\n          </div>\r\n          {children}\r\n        </div>\r\n        <ModalOverlay onClick={onClose} />\r\n      </>\r\n    ), document.getElementById('react-modals') as HTMLElement);\r\n}\r\n\r\n\r\nexport default Modal;\r\n","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from '../types';\r\n\r\n\r\n// Хук не даст отправить экшен, который ему не знаком.\r\nexport const useDispatch = () => dispatchHook<AppDispatch & AppThunk>();\r\n\r\n// Теперь этот хук знает структуру хранилища.\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n","import styles from './IngredientDetails.module.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks/hooks';\r\nimport { FC } from 'react';\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst IngredientDetails: FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { allIngredients } = useSelector(store => store.allIngredients);\r\n  const ingredientData = allIngredients?.find(item => item._id === id);/* const ingredientData = allIngredients ? allIngredients.find(item => item._id === id) : undefined; */\r\n\r\n  if (!ingredientData) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <img src={ingredientData.image_large} alt={ingredientData.name} className={styles.image} />\r\n      <h3 className=\"text text_type_main-medium mt-4\">{ingredientData.name}</h3>\r\n\r\n      <ul className={`${styles.propertiesList} mt-8`}>\r\n        <li className={`${styles.propertiesListItem} mr-5`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Калории,&nbsp;ккал</p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">{ingredientData.calories}</p>\r\n        </li>\r\n        <li className={`${styles.propertiesListItem} mr-5`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Белки,&nbsp;г</p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">{ingredientData.proteins}</p>\r\n        </li>\r\n        <li className={`${styles.propertiesListItem} mr-5`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Жиры,&nbsp;г</p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">{ingredientData.fat}</p>\r\n        </li>\r\n        <li className={styles.propertiesListItem}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Углеводы,&nbsp;г</p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">{ingredientData.carbohydrates}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default IngredientDetails;\r\n","import React, { FC } from 'react';\r\nimport { Redirect, Route, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks/hooks';\r\nimport { TLocationState, TProtectedRouteComponent } from '../../services/types/data';\r\n\r\n\r\n\r\nexport const ProtectedRoute: FC<TProtectedRouteComponent> = ({ onlyUnAuth, children, ...rest }) => {\r\n  const { user } = useSelector(store => store.auth);\r\n  const location = useLocation<TLocationState>();\r\n\r\n  if (onlyUnAuth && user) {\r\n    const { from } = location.state || { from: { pathname: '/' } };\r\n\r\n    return (\r\n      <Route {...rest}>\r\n        <Redirect to={from} />\r\n      </Route>\r\n    );\r\n  }\r\n\r\n  if (!onlyUnAuth && !user) {\r\n    return (\r\n      <Route {...rest}>\r\n        <Redirect to={{ pathname: '/login', state: { from: location } }} />\r\n      </Route>\r\n    );\r\n  }\r\n\r\n  return <Route {...rest}>\r\n    {children}\r\n  </Route>;\r\n\r\n}\r\n","export const API_PATH_BASE_URL = 'https://norma.nomoreparties.space/api';\r\n\r\nexport const WS_URL =  'wss://norma.nomoreparties.space/orders';\r\n\r\nexport const TOTAL_PRICE_INITIAL_STATE = { totalPrice: 0 };\r\nexport const ACTION_TYPE_SUM = 'sum';\r\nexport const ACTION_TYPE_RESET = 'reset';\r\n\r\nexport const INGREDIENT_TYPE_BUN = 'bun';\r\n\r\nexport const USE_IN_VIEW_OPTIONS = { threshold: 0.1 };\r\n\r\nexport const INGREDIENT_ICON_VIEWED_IN_ORDER_CARD_MAX = 5;\r\n","export function setCookie(name: string, value: string, props: { [key: string]: any } & { expires?: string | number | Date} = {}) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n\r\n  if (exp && (exp as Date).toUTCString) {\r\n    props.expires = (exp as Date).toUTCString();\r\n  }\r\n\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function getCookie(name: string): string | undefined {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, '', { expires: -1 });\r\n}\r\n","import { API_PATH_BASE_URL } from './constants';\r\nimport { getCookie, setCookie } from './cookie';\r\nimport {\r\n  IIngredientDataResponse,\r\n  IOrderDataResponse,\r\n  ITokenUpdResponse,\r\n  IPasswordForgotResetResponse,\r\n  IAuthResponse,\r\n  IAuthOutResponse,\r\n  IUserDataResponce,\r\n  TOrderDetails\r\n} from '../services/types/data';\r\n\r\n\r\n\r\ntype TOptions = {\r\n  method?: string,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    authorization?: string\r\n  },\r\n  body?: string\r\n};\r\n\r\nconst checkReponse = <T>(res: Response): Promise<T> => {\r\n  return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nconst fetchWithRefresh = async <T>(url: string, options?: TOptions): Promise<T> => {\r\n  try {\r\n    const res = await fetch(url, options); //делаем запрос\r\n\r\n    return await checkReponse(res);\r\n  } catch (err) {\r\n    if ((err as { message: string }).message === \"jwt expired\") {\r\n      const { accessToken, refreshToken } = await updateTokenRequest(); //обновляем токены\r\n\r\n      setCookie('token', accessToken.split('Bearer ')[1]);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n      console.log('Access and refresh tokens update successfully!');\r\n\r\n      if (options) {\r\n        options.headers.authorization = accessToken;\r\n      }\r\n\r\n      const res = await fetch(url, options); //вызываем перезапрос данных\r\n\r\n      return await checkReponse(res);\r\n    } else {\r\n      return Promise.reject(err);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport async function getOrderDataRequest(ingredientsId: string[]) {\r\n  return await fetchWithRefresh<TOrderDetails>(`${API_PATH_BASE_URL}/orders`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + getCookie('token')\r\n    },\r\n    body: JSON.stringify({ ingredients: ingredientsId })\r\n  })\r\n};\r\n\r\nexport async function getAllIngredientsRequest() {\r\n  return await fetchWithRefresh<IIngredientDataResponse>(`${API_PATH_BASE_URL}/ingredients`);\r\n};\r\n\r\nexport async function signUpUserRequest(email: string, password: string, name: string) {\r\n  return await fetchWithRefresh<IAuthResponse>(`${API_PATH_BASE_URL}/auth/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email: email, password: password, name: name })\r\n  });\r\n};\r\n\r\nexport async function signInUserRequest(email: string, password: string) {\r\n  return await fetchWithRefresh<IAuthResponse>(`${API_PATH_BASE_URL}/auth/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email: email, password: password })\r\n  });\r\n};\r\n\r\nexport async function signOutUserRequest() {\r\n  return await fetchWithRefresh<IAuthOutResponse>(`${API_PATH_BASE_URL}/auth/logout`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ token: localStorage.getItem('refreshToken') })\r\n  });\r\n};\r\n\r\nexport async function forgotPasswordRequest(email: string) {\r\n  return await fetchWithRefresh<IPasswordForgotResetResponse>(`${API_PATH_BASE_URL}/password-reset`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email: email })\r\n  });\r\n};\r\n\r\nexport async function resetPasswordRequest(password: string, code: string) {\r\n  return await fetchWithRefresh<IPasswordForgotResetResponse>(`${API_PATH_BASE_URL}/password-reset/reset`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ password: password, token: code })\r\n  });\r\n};\r\n\r\nexport async function getUserDataRequest() {\r\n  return await fetchWithRefresh<IUserDataResponce>(`${API_PATH_BASE_URL}/auth/user`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + getCookie('token')\r\n    }\r\n  });\r\n};\r\n\r\nexport async function refreshUserDataRequest(email: string, name: string, password: string) {\r\n  return await fetchWithRefresh<IUserDataResponce>(`${API_PATH_BASE_URL}/auth/user`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + getCookie('token')\r\n    },\r\n    body: JSON.stringify({ name: name, email: email, password: password })\r\n  });\r\n};\r\n\r\nexport async function updateTokenRequest() {\r\n  return await fetchWithRefresh<ITokenUpdResponse>(`${API_PATH_BASE_URL}/auth/token`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ token: localStorage.getItem('refreshToken') })\r\n  });\r\n};\r\n","export const REGISTRATION_USER_REQUEST: 'REGISTRATION_USER_REQUEST' = 'REGISTRATION_USER_REQUEST';\r\nexport const REGISTRATION_USER_SUCCESS: 'REGISTRATION_USER_SUCCESS' = 'REGISTRATION_USER_SUCCESS';\r\nexport const REGISTRATION_USER_FAILED: 'REGISTRATION_USER_FAILED' = 'REGISTRATION_USER_FAILED';\r\n\r\nexport const LOGIN_USER_REQUEST: 'LOGIN_USER_REQUEST' = 'LOGIN_USER_REQUEST';\r\nexport const LOGIN_USER_SUCCESS: 'LOGIN_USER_SUCCESS' = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED: 'LOGIN_USER_FAILED' = 'LOGIN_USER_FAILED';\r\n\r\nexport const LOGOUT_USER_REQUEST: 'LOGOUT_USER_REQUEST' = 'LOGOUT_USER_REQUEST';\r\nexport const LOGOUT_USER_SUCCESS: 'LOGOUT_USER_SUCCESS' = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILED: 'LOGOUT_USER_FAILED' = 'LOGOUT_USER_FAILED';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAILED: 'FORGOT_PASSWORD_FAILED' = 'FORGOT_PASSWORD_FAILED';\r\n\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\r\n\r\nexport const GET_USERDATA_REQUEST: 'GET_USERDATA_REQUEST' = 'GET_USERDATA_REQUEST';\r\nexport const GET_USERDATA_SUCCESS: 'GET_USERDATA_SUCCESS' = 'GET_USERDATA_SUCCESS';\r\nexport const GET_USERDATA_FAILED: 'GET_USERDATA_FAILED' = 'GET_USERDATA_FAILED';\r\n\r\nexport const REFRESH_USERDATA_REQUEST: 'REFRESH_USERDATA_REQUEST' = 'REFRESH_USERDATA_REQUEST';\r\nexport const REFRESH_USERDATA_SUCCESS: 'REFRESH_USERDATA_SUCCESS' = 'REFRESH_USERDATA_SUCCESS';\r\nexport const REFRESH_USERDATA_FAILED: 'REFRESH_USERDATA_FAILED' = 'REFRESH_USERDATA_FAILED';\r\n\r\nexport const UPDATE_TOKEN_REQUEST: 'UPDATE_TOKEN_REQUEST' = 'UPDATE_TOKEN_REQUEST';\r\nexport const UPDATE_TOKEN_SUCCESS: 'UPDATE_TOKEN_SUCCESS' = 'UPDATE_TOKEN_SUCCESS';\r\nexport const UPDATE_TOKEN_FAILED: 'UPDATE_TOKEN_FAILED' = 'UPDATE_TOKEN_FAILED';\r\n","import {\r\n  signUpUserRequest,\r\n  signInUserRequest,\r\n  signOutUserRequest,\r\n  forgotPasswordRequest,\r\n  resetPasswordRequest,\r\n  getUserDataRequest,\r\n  refreshUserDataRequest,\r\n  updateTokenRequest\r\n} from '../../utils/api';\r\nimport { AppDispatch, AppThunk } from '../types';\r\nimport {\r\n  TRegistrationUserRequestAction, TRegistrationUserSuccessAction, TRegistrationUserFailedAction,\r\n  TLoginUserRequestAction, TLoginUserSuccessAction, TLoginUserFailedAction,\r\n  TLogoutUserRequestAction, TLogoutUserSuccessAction, TLogoutUserFailedAction,\r\n  TForgotPasswordRequestAction, TForgotPasswordSuccessAction, TForgotPasswordFailedAction,\r\n  TResetPasswordRequestAction, TResetPasswordSuccessAction, TResetPasswordFailedAction,\r\n  TGetUserDataRequestAction, TGetUserDataSuccessAction, TGetUserDataFailedAction,\r\n  TRefreshUserDataRequestAction, TRefreshUserDataSuccessAction, TRefreshUserDataFailedAction,\r\n  TUpdateTokenRequestAction, TUpdateTokenSuccessAction, TUpdateTokenFailedAction\r\n} from '../types/actions';\r\nimport { IAuthOutResponse, IAuthResponse, IPasswordForgotResetResponse, IRegistrationResponse, ITokenUpdResponse, IUserDataResponce } from '../types/data';\r\nimport {\r\n  FORGOT_PASSWORD_FAILED,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  GET_USERDATA_FAILED,\r\n  GET_USERDATA_REQUEST,\r\n  GET_USERDATA_SUCCESS,\r\n  LOGIN_USER_FAILED,\r\n  LOGIN_USER_REQUEST,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGOUT_USER_FAILED,\r\n  LOGOUT_USER_REQUEST,\r\n  LOGOUT_USER_SUCCESS,\r\n  REFRESH_USERDATA_FAILED,\r\n  REFRESH_USERDATA_REQUEST,\r\n  REFRESH_USERDATA_SUCCESS,\r\n  REGISTRATION_USER_FAILED,\r\n  REGISTRATION_USER_REQUEST,\r\n  REGISTRATION_USER_SUCCESS,\r\n  RESET_PASSWORD_FAILED,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_SUCCESS,\r\n  UPDATE_TOKEN_FAILED,\r\n  UPDATE_TOKEN_REQUEST,\r\n  UPDATE_TOKEN_SUCCESS\r\n} from './action-types/auth';\r\n\r\n\r\n\r\n\r\nexport const RegistrationUserRequestAction = (): TRegistrationUserRequestAction => ({\r\n  type: REGISTRATION_USER_REQUEST\r\n});\r\n\r\nexport const RegistrationUserSuccessAction = (data: IRegistrationResponse): TRegistrationUserSuccessAction => ({\r\n  type: REGISTRATION_USER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const RegistrationUserFailedAction = (err: string): TRegistrationUserFailedAction => ({\r\n  type: REGISTRATION_USER_FAILED,\r\n  err\r\n});\r\n\r\n\r\nexport const LoginUserRequestAction = (): TLoginUserRequestAction => ({\r\n  type: LOGIN_USER_REQUEST\r\n});\r\n\r\nexport const LoginUserSuccessAction = (data: IAuthResponse): TLoginUserSuccessAction => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const LoginUserFailedAction = (err: string): TLoginUserFailedAction => ({\r\n  type: LOGIN_USER_FAILED,\r\n  err\r\n});\r\n\r\n\r\nexport const LogoutUserRequestAction = (): TLogoutUserRequestAction => ({\r\n  type: LOGOUT_USER_REQUEST\r\n});\r\n\r\nexport const LogoutUserSuccessAction = (data: IAuthOutResponse): TLogoutUserSuccessAction => ({\r\n  type: LOGOUT_USER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const LogoutUserFailedAction = (err: string): TLogoutUserFailedAction => ({\r\n  type: LOGOUT_USER_FAILED,\r\n  err\r\n});\r\n\r\n\r\nexport const ForgotPasswordRequestAction = (): TForgotPasswordRequestAction => ({\r\n  type: FORGOT_PASSWORD_REQUEST\r\n});\r\n\r\nexport const ForgotPasswordSuccessAction = (data: IPasswordForgotResetResponse): TForgotPasswordSuccessAction => ({\r\n  type: FORGOT_PASSWORD_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const ForgotPasswordFailedAction = (err: string): TForgotPasswordFailedAction => ({\r\n  type: FORGOT_PASSWORD_FAILED,\r\n  err\r\n});\r\n\r\n\r\nexport const ResetPasswordRequestAction = (): TResetPasswordRequestAction => ({\r\n  type: RESET_PASSWORD_REQUEST\r\n});\r\n\r\nexport const ResetPasswordSuccessAction = (data: IPasswordForgotResetResponse): TResetPasswordSuccessAction => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const ResetPasswordFailedAction = (err: string): TResetPasswordFailedAction => ({\r\n  type: RESET_PASSWORD_FAILED,\r\n  err\r\n});\r\n\r\n\r\nexport const GetUserDataRequestAction = (): TGetUserDataRequestAction => ({\r\n  type: GET_USERDATA_REQUEST\r\n});\r\n\r\nexport const GetUserDataSuccessAction = (data: IUserDataResponce): TGetUserDataSuccessAction => ({\r\n  type: GET_USERDATA_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const GetUserDataFailedAction = (err: string): TGetUserDataFailedAction => ({\r\n  type: GET_USERDATA_FAILED,\r\n  err\r\n});\r\n\r\n\r\nexport const RefreshUserDataRequestAction = (): TRefreshUserDataRequestAction => ({\r\n  type: REFRESH_USERDATA_REQUEST\r\n});\r\n\r\nexport const RefreshUserDataSuccessAction = (data: IUserDataResponce): TRefreshUserDataSuccessAction => ({\r\n  type: REFRESH_USERDATA_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const RefreshUserDataFailedAction = (err: string): TRefreshUserDataFailedAction => ({\r\n  type: REFRESH_USERDATA_FAILED,\r\n  err\r\n});\r\n\r\n\r\nexport const UpdateTokenRequestAction = (): TUpdateTokenRequestAction => ({\r\n  type: UPDATE_TOKEN_REQUEST\r\n});\r\n\r\nexport const UpdateTokenSuccessAction = (data: ITokenUpdResponse): TUpdateTokenSuccessAction => ({\r\n  type: UPDATE_TOKEN_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const UpdateTokenFailedAction = (err: string): TUpdateTokenFailedAction => ({\r\n  type: UPDATE_TOKEN_FAILED,\r\n  err\r\n});\r\n\r\n////////////////////////////////////\r\n\r\nexport const registerUser: AppThunk = (email: string, password: string, name: string) => (dispatch: AppDispatch) => {\r\n  dispatch(RegistrationUserRequestAction());\r\n\r\n  signUpUserRequest(email, password, name)\r\n    .then(data => dispatch(RegistrationUserSuccessAction(data)))\r\n    .catch(err => dispatch(RegistrationUserFailedAction(err)));\r\n};\r\n\r\nexport const loginUser: AppThunk = (email: string, password: string) => (dispatch: AppDispatch) => {\r\n  dispatch(LoginUserRequestAction());\r\n\r\n  signInUserRequest(email, password)\r\n    .then(data => dispatch(LoginUserSuccessAction(data)))\r\n    .catch(err => dispatch(LoginUserFailedAction(err)));\r\n};\r\n\r\nexport const logoutUser: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(LogoutUserRequestAction());\r\n\r\n  signOutUserRequest()\r\n    .then(data => dispatch(LogoutUserSuccessAction(data)))\r\n    .catch(err => dispatch(LogoutUserFailedAction(err)));\r\n};\r\n\r\nexport const forgotPassword: AppThunk = (email: string) => (dispatch: AppDispatch) => {\r\n  dispatch(ForgotPasswordRequestAction());\r\n\r\n  forgotPasswordRequest(email)\r\n    .then(data => dispatch(ForgotPasswordSuccessAction(data)))\r\n    .catch(err => dispatch(ForgotPasswordFailedAction(err)));\r\n};\r\n\r\nexport const resetPassword: AppThunk = (password: string, code: string) => (dispatch: AppDispatch) => {\r\n  dispatch(ResetPasswordRequestAction());\r\n\r\n  resetPasswordRequest(password, code)\r\n    .then(data => dispatch(ResetPasswordSuccessAction(data)))\r\n    .catch(err => dispatch(ResetPasswordFailedAction(err)));\r\n};\r\n\r\nexport const getUserData: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(GetUserDataRequestAction());\r\n\r\n  getUserDataRequest()\r\n    .then(data => dispatch(GetUserDataSuccessAction(data)))\r\n    .catch(err => dispatch(GetUserDataFailedAction(err)));\r\n};\r\n\r\nexport const refreshUserData: AppThunk = (email: string, name: string, password: string) => (dispatch: AppDispatch) => {\r\n  dispatch(RefreshUserDataRequestAction());\r\n\r\n  refreshUserDataRequest(email, name, password)\r\n    .then(data => dispatch(RefreshUserDataSuccessAction(data)))\r\n    .catch(err => dispatch(RefreshUserDataFailedAction(err)));\r\n};\r\n\r\nexport const updateToken: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(UpdateTokenRequestAction());\r\n\r\n  updateTokenRequest()\r\n    .then(data => dispatch(UpdateTokenSuccessAction(data)))\r\n    .catch(err => dispatch(UpdateTokenFailedAction(err)));\r\n};\r\n","import React, { FC, FormEvent, useState } from 'react';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUser } from '../../services/actions/auth';\r\nimport { useDispatch } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nexport const LoginPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [emailValue, setEmailValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n\r\n  const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(loginUser(emailValue, passwordValue));\r\n  }\r\n\r\n\r\n  return (\r\n    <main className={commonStyles.main}>\r\n\r\n      <div className={commonStyles.container}>\r\n        <h1 className=\"text text_type_main-medium\">Вход</h1>\r\n\r\n        <form className={commonStyles.form} onSubmit={onFormSubmit}>\r\n          <Input\r\n            value={emailValue}\r\n            type={'email'}\r\n            placeholder={'E-mail'}\r\n            onChange={e => setEmailValue(e.target.value)}\r\n            extraClass='mt-6 mb-6'\r\n          />\r\n          <PasswordInput value={passwordValue} onChange={e => setPasswordValue(e.target.value)} />\r\n          <Button\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            size=\"medium\"\r\n            extraClass='mt-6 mb-20'\r\n            disabled={!emailValue || !passwordValue} >\r\n            Войти\r\n          </Button>\r\n        </form>\r\n\r\n        <div className={`${commonStyles.navigationBlock} mb-4`}>\r\n          <p className='text text_type_main-default text_color_inactive'>\r\n            Вы - новый пользователь? <Link to=\"/register\" className={commonStyles.navigationLink}>Зарегистрироваться</Link>\r\n          </p>\r\n        </div>\r\n\r\n        <div className={`${commonStyles.navigationBlock}`}>\r\n          <p className='text text_type_main-default text_color_inactive'>\r\n            Забыли пароль? <Link className={commonStyles.navigationLink} to=\"/forgot-password\">Восстановить пароль</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n    </main>\r\n  )\r\n}\r\n","import React, { useMemo, FC } from 'react';\r\nimport styles from './Ingredient.module.css';\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { TIngredientComponent } from '../../services/types/data';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nconst Ingredient: FC<TIngredientComponent> = ({ data, onClick }) => {\r\n  const location = useLocation();\r\n\r\n  const bunItem = useSelector(store => store.constructorIngredients.bun);\r\n  const stuffingItems = useSelector(store => store.constructorIngredients.stuffing);\r\n\r\n  const counter = useMemo(() =>\r\n    () => {\r\n      let res = 0;\r\n\r\n      if (data.type === 'bun') {\r\n        if (bunItem && bunItem._id === data._id) {\r\n          res = 2;\r\n        }\r\n      } else {\r\n        stuffingItems.forEach(item => {\r\n          if (item._id === data._id) res++;\r\n        });\r\n      }\r\n\r\n      return res;\r\n    }, [bunItem, stuffingItems]);\r\n\r\n  const [{ opacity }, dragRef] = useDrag({\r\n    type: \"ingredients\",\r\n    item: data,\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.3 : 1\r\n    }),\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <Link to={{ pathname: `/ingredients/${data._id}`, state: { background: location } }} className={styles.link}>\r\n      <li\r\n        className={`${styles.content} ml-2`}\r\n        onClick={onClick}\r\n        ref={dragRef}\r\n        style={{ opacity }}\r\n      >\r\n        {(counter() !== 0) && <Counter count={counter()} size=\"default\" />}\r\n        <img src={data.image} alt={data.name} className={styles.image} />\r\n\r\n        <div className={`${styles.priceGroup} mt-2 mb-2`}>\r\n          <p className=\"text text_type_digits-default mr-2\">{data.price}</p>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n\r\n        <p className='text text_type_main-default'>{data.name}</p>\r\n      </li>\r\n    </Link>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Ingredient;\r\n","import React, { FC } from 'react';\r\nimport { TLoaderSvg } from '../../services/types/data';\r\n\r\nexport const LoaderSvg: FC<TLoaderSvg> = ({ color = '#3C39EC', size }) => {\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 38 38\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke={color}\r\n    >\r\n      <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(1 1)\" strokeWidth=\"2\">\r\n          <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\r\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 18 18\"\r\n              to=\"360 18 18\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </path>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport style from './Loader.module.css';\r\nimport { LoaderSvg } from './LoaderSvg';\r\nimport { TLoaderSize, TLoader } from '../../services/types/data';\r\n\r\n\r\n\r\nconst loaderSizes: { [size in TLoaderSize]: number } = {\r\n  small: 16,\r\n  medium: 24,\r\n  large: 40,\r\n  superLarge: 100\r\n};\r\n\r\n\r\nconst Loader: FC<TLoader> = ({ size }) => {\r\n  const loaderColor = '#3C39EC';\r\n  const wrapperStyleKey = 'wrapper_' + size;\r\n\r\n  return (\r\n    <div className={style[wrapperStyleKey]}>\r\n      <LoaderSvg color={loaderColor} size={loaderSizes[size]} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Loader;\r\n","export const SET_MODAL: 'SET_MODAL' = 'SET_MODAL';\r\nexport const RESET_MODAL: 'RESET_MODAL' = 'RESET_MODAL';\r\n","import { TResetModalAction, TSetModalAction } from \"../types/actions\";\r\nimport { TModal } from \"../types/data\";\r\nimport { RESET_MODAL, SET_MODAL } from \"./action-types/modal\";\r\n\r\n\r\n\r\nexport const SetModalAction = (content: TModal): TSetModalAction => ({\r\n  type: SET_MODAL,\r\n  content\r\n});\r\n\r\nexport const ResetModalAction = (): TResetModalAction => ({\r\n  type: RESET_MODAL\r\n});\r\n","import React, { useEffect, FC, useCallback } from 'react';\r\nimport burgerIngredientsStyles from './BurgerIngredients.module.css';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Ingredient from '../Ingredient/Ingredient';\r\nimport Loader from '../Loader/Loader';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { USE_IN_VIEW_OPTIONS } from '../../utils/constants';\r\nimport { SetModalAction } from '../../services/actions/modal';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\nimport { TIngredient, TIngredientType } from '../../services/types/data';\r\n\r\n\r\n\r\nconst BurgerIngredients: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [current, setCurrent] = React.useState('bunTab');\r\n  const { allIngredients, allIngredientsRequest } = useSelector(store => store.allIngredients);\r\n\r\n  const getViewedIngredientData = useCallback(() => {\r\n    dispatch(SetModalAction('ingredient'));\r\n  }, [dispatch]);\r\n\r\n  const getFilteredIngredients = (data: TIngredient[], filterCondition: TIngredientType) => {\r\n    const filtered = data.filter(item => item.type === filterCondition);\r\n\r\n    return filtered.map(item =>\r\n      <Ingredient\r\n        data={item}\r\n        key={item._id}\r\n        onClick={getViewedIngredientData}\r\n      />);\r\n  };\r\n\r\n  const [bunListItemRef, bunListItemInView] = useInView(USE_IN_VIEW_OPTIONS);\r\n  const [sauceListItemRef, sauceListItemInView] = useInView(USE_IN_VIEW_OPTIONS);\r\n  const [mainListItemRef, mainListItemInView] = useInView(USE_IN_VIEW_OPTIONS);\r\n\r\n  const inViewHandler = () => {\r\n    switch (true) {\r\n      case bunListItemInView: {\r\n        setCurrent('bunTab');\r\n        break;\r\n      }\r\n      case sauceListItemInView: {\r\n        setCurrent('sauceTab');\r\n        break;\r\n      }\r\n      case mainListItemInView: {\r\n        setCurrent('mainTab');\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inViewHandler();\r\n  }, [bunListItemInView, sauceListItemInView, mainListItemInView]);\r\n\r\n  return (\r\n    <section className={burgerIngredientsStyles.section}>\r\n\r\n      <h1 className='text text_type_main-large mt-10'>Соберите бургер</h1>\r\n\r\n      <div className={`${burgerIngredientsStyles.tabs} mt-5 mb-10`}>\r\n        <a href='#bunListItem' className={burgerIngredientsStyles.link}>\r\n          <Tab value='bunTab' active={current === 'bunTab'} onClick={setCurrent}>\r\n            Булки\r\n          </Tab>\r\n        </a>\r\n        <a href='#sauceListItem' className={burgerIngredientsStyles.link}>\r\n          <Tab value='sauceTab' active={current === 'sauceTab'} onClick={setCurrent}>\r\n            Соусы\r\n          </Tab>\r\n        </a>\r\n        <a href='#mainListItem' className={burgerIngredientsStyles.link}>\r\n          <Tab value='mainTab' active={current === 'mainTab'} onClick={setCurrent}>\r\n            Начинки\r\n          </Tab>\r\n        </a>\r\n      </div>\r\n\r\n      {allIngredientsRequest ? (<Loader size='superLarge' />)\r\n        : (\r\n          <ul className={burgerIngredientsStyles.categoryList} >\r\n            <li id='bunListItem' ref={bunListItemRef}>\r\n              <h2 className='text text_type_main-medium'>Булки</h2>\r\n              <ul className={`${burgerIngredientsStyles.ingredientsList} mt-6 mb-10`}>\r\n                {getFilteredIngredients(allIngredients, 'bun')}\r\n              </ul>\r\n            </li>\r\n            <li id='sauceListItem' ref={sauceListItemRef}>\r\n              <h2 className='text text_type_main-medium'>Соусы</h2>\r\n              <ul className={`${burgerIngredientsStyles.ingredientsList} mt-6 mb-10`}>\r\n                {getFilteredIngredients(allIngredients, 'sauce')}\r\n              </ul>\r\n            </li>\r\n            <li id='mainListItem' ref={mainListItemRef}>\r\n              <h2 className=\"text text_type_main-medium\">Начинки</h2>\r\n              <ul className={`${burgerIngredientsStyles.ingredientsList} mt-6 mb-10`}>\r\n                {getFilteredIngredients(allIngredients, 'main')}\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        )}\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\nexport default BurgerIngredients;\r\n","export const ADD_BUN_TO_CONSTRUCTOR: 'ADD_BUN_TO_CONSTRUCTOR' = 'ADD_BUN_TO_CONSTRUCTOR';\r\nexport const ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR: 'ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR' = 'ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR';\r\nexport const DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR: 'DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR' = 'DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR';\r\nexport const REORDER_STUFFING_ELEMENTS: 'REORDER_STUFFING_ELEMENTS' = 'REORDER_STUFFING_ELEMENTS';\r\nexport const CONSTRUCTOR_CLEANUP: 'CONSTRUCTOR_CLEANUP' = 'CONSTRUCTOR_CLEANUP';\r\n","import React, { FC, useRef } from 'react';\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport burgerConstructorItemStyles from './BurgerConstructorItem.module.css';\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { DeleteStuffingElementFromConstructorAction, ReorderStuffingElementsAction } from '../../services/actions/constructorIngredients';\r\nimport { TBurgerConstructorItem } from '../../services/types/data';\r\nimport { useDispatch } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nconst BurgerConstructorItem: FC<TBurgerConstructorItem> = ({ data, index }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = data;\r\n  const dndRef = useRef<HTMLLIElement>(null);\r\n\r\n  const deleteItemHandle = (id: string) => {\r\n    dispatch(DeleteStuffingElementFromConstructorAction(id));\r\n  };\r\n\r\n  const [{ opacity }, dragRef] = useDrag({\r\n    type: \"ingredient\",\r\n    item: { id, index },\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.3 : 1\r\n    })\r\n  });\r\n\r\n  const [{ isHover }, dropRef] = useDrop({\r\n    accept: \"ingredient\",\r\n    hover(data: TBurgerConstructorItem) {\r\n      if (!dndRef.current) return;\r\n\r\n      const dragIndex = data.index;\r\n      const dropIndex = index;\r\n\r\n      dispatch(ReorderStuffingElementsAction(dragIndex, dropIndex));\r\n\r\n      data.index = dropIndex;\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  dragRef(dropRef(dndRef));\r\n\r\n\r\n\r\n  return (\r\n    <li className={`${burgerConstructorItemStyles.listItem} ${isHover ? burgerConstructorItemStyles.hoveredItem : ''} mb-4 mr-2`}\r\n      ref={dndRef}\r\n      style={{opacity}}\r\n    >\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement text={data.name} price={data.price} thumbnail={data.image} handleClose={() => deleteItemHandle(id)} />\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default BurgerConstructorItem;\r\n","import {\r\n  ADD_BUN_TO_CONSTRUCTOR,\r\n  ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR,\r\n  DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR,\r\n  REORDER_STUFFING_ELEMENTS,\r\n  CONSTRUCTOR_CLEANUP\r\n} from './action-types/constructorIngredients';\r\nimport { TIngredient } from '../types/data';\r\nimport {\r\n  TAddBunToConstructorAction,\r\n  TAddStuffingElementToConstructorAction,\r\n  TDeleteStuffingElementFromConstructorAction,\r\n  TReorderStuffingElementsAction,\r\n  TConstructorCleanUpAction\r\n} from '../types/actions';\r\n\r\n\r\n\r\nexport const AddBunToConstructorAction = (item: TIngredient): TAddBunToConstructorAction => ({\r\n  type: ADD_BUN_TO_CONSTRUCTOR,\r\n  item\r\n});\r\n\r\nexport const AddStuffingElementToConstructorAction = (item: TIngredient, id: string): TAddStuffingElementToConstructorAction => ({\r\n  type: ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR,\r\n  payload: { item, id }\r\n});\r\n\r\nexport const DeleteStuffingElementFromConstructorAction = (id: string): TDeleteStuffingElementFromConstructorAction => ({\r\n  type: DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR,\r\n  payload: { id }\r\n});\r\n\r\nexport const ReorderStuffingElementsAction = (dragIndex: number, dropIndex: number): TReorderStuffingElementsAction => ({\r\n  type: REORDER_STUFFING_ELEMENTS,\r\n  payload: { dragIndex, dropIndex }\r\n});\r\n\r\nexport const ConstructorCleanUpAction = (): TConstructorCleanUpAction => ({\r\n  type: CONSTRUCTOR_CLEANUP\r\n});\r\n","export const GET_ORDER_DATA_REQUEST: 'GET_ORDER_DATA_REQUEST' = 'GET_ORDER_DATA_REQUEST';\r\nexport const GET_ORDER_DATA_SUCCESS: 'GET_ORDER_DATA_SUCCESS' = 'GET_ORDER_DATA_SUCCESS';\r\nexport const GET_ORDER_DATA_FAILED: 'GET_ORDER_DATA_FAILED' = 'GET_ORDER_DATA_FAILED';\r\n","import { getOrderDataRequest } from '../../utils/api';\r\nimport {\r\n  GET_ORDER_DATA_REQUEST,\r\n  GET_ORDER_DATA_SUCCESS,\r\n  GET_ORDER_DATA_FAILED\r\n} from '../../services/actions/action-types/orderData';\r\nimport {\r\n  TGetOrderDataRequestAction,\r\n  TGetOrderDataSuccessAction,\r\n  TGetOrderDataFailedAction\r\n} from '../../services/types/actions';\r\nimport { TOrderDetails } from '../types/data';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\n\r\n\r\nexport const GetOrderDataRequestAction = (): TGetOrderDataRequestAction => ({\r\n  type: GET_ORDER_DATA_REQUEST\r\n});\r\n\r\nexport const GetOrderDataSuccessAction = (data: TOrderDetails): TGetOrderDataSuccessAction => ({\r\n  type: GET_ORDER_DATA_SUCCESS,\r\n  orderData: data\r\n});\r\n\r\nexport const GetOrderDataFailedAction = (): TGetOrderDataFailedAction => ({\r\n  type: GET_ORDER_DATA_FAILED\r\n});\r\n\r\n\r\n\r\n\r\nexport const getOrderData: AppThunk = (ingredientsId: string[]) => (dispatch: AppDispatch) => {\r\n    dispatch(GetOrderDataRequestAction());\r\n\r\n    getOrderDataRequest(ingredientsId)\r\n      .then(data =>\r\n        dispatch(GetOrderDataSuccessAction(data)))\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n        dispatch(GetOrderDataFailedAction());\r\n      });\r\n};\r\n","import React, { useMemo, FC } from 'react';\r\nimport burgerConstructorStyles from './BurgerConstructor.module.css';\r\nimport { ConstructorElement, Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport BurgerConstructorItem from '../BurgerConstructorItem/BurgerConstructorItem';\r\nimport { getOrderData } from '../../services/actions/orderData';\r\nimport { useDrop } from \"react-dnd\";\r\nimport { SetModalAction } from '../../services/actions/modal';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\nimport { AddBunToConstructorAction, AddStuffingElementToConstructorAction } from '../../services/actions/constructorIngredients';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\n\r\n\r\nconst BurgerConstructor: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { user } = useSelector(store => store.auth);\r\n\r\n  const bunItem = useSelector(store => store.constructorIngredients.bun);\r\n  const stuffingItems = useSelector(store => store.constructorIngredients.stuffing);\r\n  const ingredientsId = useMemo(\r\n    () => [bunItem, ...stuffingItems, bunItem].map(item => item ? item._id : ''),\r\n    [bunItem, stuffingItems]\r\n  );\r\n\r\n  const getOrderDataFromBackend = (idArr: string[]) => {\r\n    if (!user) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(getOrderData(idArr));\r\n      dispatch(SetModalAction('orderInfo'));\r\n    }\r\n  };\r\n\r\n  const totalPrice = useMemo(() => {\r\n    /* return (\r\n      (Object.keys(bunItem).length > 0 ? bunItem.price * 2 : 0) +\r\n      stuffingItems.reduce((sum, curr) => sum + curr.price, 0)\r\n    ); */\r\n    return (\r\n      (bunItem ? bunItem.price * 2 : 0) +\r\n      stuffingItems.reduce((sum, curr) => sum + curr.price, 0)\r\n    );\r\n  }, [bunItem, stuffingItems]);\r\n\r\n  const [{ isHover }, dropRef] = useDrop({\r\n    accept: \"ingredients\",\r\n    drop(item: TIngredient) {\r\n      item.type === \"bun\"\r\n        ? dispatch(AddBunToConstructorAction(item))\r\n        : dispatch(AddStuffingElementToConstructorAction(item, Math.random().toString().slice(2)));\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  const chosenPositionsListScroll = stuffingItems && (stuffingItems.length >= 5) ?\r\n    'chosenPositionsList_overflowY_scroll' :\r\n    'chosenPositionsList_overflowY_hidden';\r\n\r\n\r\n\r\n  return (\r\n    <div className={`${burgerConstructorStyles.section} pt-25`}>\r\n\r\n      <ul\r\n        className={`${burgerConstructorStyles.positionsList} ${isHover ? burgerConstructorStyles.hoveredList : ''}`}\r\n        ref={dropRef}\r\n      >\r\n\r\n        <li className={`${burgerConstructorStyles.lockedPosition} ml-8 mr-4 mb-4`}>\r\n          {/* {Object.keys(bunItem).length > 0 &&\r\n            <ConstructorElement\r\n              key={bunItem._id}\r\n              type=\"top\"\r\n              isLocked={true}\r\n              text={`${bunItem.name} (верх)`}\r\n              price={bunItem.price}\r\n              thumbnail={bunItem.image} />} */}\r\n          {bunItem &&\r\n            <ConstructorElement\r\n              key={bunItem._id}\r\n              type=\"top\"\r\n              isLocked={true}\r\n              text={`${bunItem.name} (верх)`}\r\n              price={bunItem.price}\r\n              thumbnail={bunItem.image} />}\r\n        </li>\r\n\r\n        <li>\r\n          <ul className={`${burgerConstructorStyles.chosenPositionsList} ${burgerConstructorStyles[chosenPositionsListScroll]}`}>\r\n            {stuffingItems && stuffingItems.map((item, index) =>\r\n              <BurgerConstructorItem data={item} index={index} key={item.id} />\r\n            )}\r\n          </ul>\r\n        </li>\r\n\r\n        <li className={`${burgerConstructorStyles.lockedPosition} mt-4 ml-8 mr-4`}>\r\n          {/* {Object.keys(bunItem).length > 0 &&\r\n            <ConstructorElement\r\n              key={bunItem._id}\r\n              type=\"bottom\"\r\n              isLocked={true}\r\n              text={`${bunItem.name} (низ)`}\r\n              price={bunItem.price}\r\n              thumbnail={bunItem.image} />\r\n          } */}\r\n          {bunItem &&\r\n            <ConstructorElement\r\n              key={bunItem._id}\r\n              type=\"bottom\"\r\n              isLocked={true}\r\n              text={`${bunItem.name} (низ)`}\r\n              price={bunItem.price}\r\n              thumbnail={bunItem.image} />\r\n          }\r\n        </li>\r\n\r\n      </ul>\r\n\r\n      <div className={`${burgerConstructorStyles.infoGroup} mt-10 mr-4`}>\r\n        <div className={`${burgerConstructorStyles.priceGroup} mr-10`}>\r\n          <p className='text text_type_digits-medium mr-5'>{totalPrice}</p>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n\r\n        <Button\r\n          htmlType=\"button\"\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          disabled={bunItem || (Object.keys(stuffingItems).length > 0) ? false : true}\r\n          onClick={() => { getOrderDataFromBackend(ingredientsId) }}>\r\n          Оформить заказ\r\n        </Button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerConstructor;\r\n","import React, { FC } from 'react';\r\nimport styles from './MainPage.module.css';\r\nimport BurgerIngredients from '../../components/BurgerIngredients/BurgerIngredients';\r\nimport BurgerConstructor from '../../components/BurgerConstructor/BurgerConstructor';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\n\r\nexport const MainPage: FC = () => {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <main className={styles.main}>\r\n        <BurgerIngredients />\r\n        <BurgerConstructor />\r\n      </main>\r\n    </DndProvider>\r\n  );\r\n}\r\n","import React, { FC, FormEvent, useState } from 'react';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerUser } from '../../services/actions/auth';\r\nimport { useDispatch } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nexport const RegistrationPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [nameValue, setNameValue] = useState('');\r\n  const [emailValue, setEmailValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n\r\n  const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(registerUser(emailValue, passwordValue, nameValue));\r\n  }\r\n\r\n\r\n  return (\r\n    <main className={commonStyles.main}>\r\n\r\n      <div className={commonStyles.container}>\r\n        <h1 className=\"text text_type_main-medium\">Регистрация</h1>\r\n\r\n        <form className={commonStyles.form} onSubmit={onFormSubmit}>\r\n          <Input\r\n            value={nameValue}\r\n            type={'text'}\r\n            placeholder={'Имя'}\r\n            onChange={e => setNameValue(e.target.value)}\r\n            extraClass='mt-6'\r\n          />\r\n          <Input\r\n            value={emailValue}\r\n            type={'email'}\r\n            placeholder={'E-mail'}\r\n            onChange={e => setEmailValue(e.target.value)}\r\n            extraClass='mt-6 mb-6'\r\n          />\r\n          <PasswordInput value={passwordValue} onChange={e => setPasswordValue(e.target.value)} />\r\n          <Button\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            size=\"medium\"\r\n            extraClass='mt-6 mb-20'\r\n            disabled={!nameValue || !emailValue || !passwordValue} >\r\n            Зарегистрироваться\r\n          </Button>\r\n        </form>\r\n\r\n        <div className={`${commonStyles.navigationBlock} mb-4`}>\r\n          <p className='text text_type_main-default text_color_inactive'>\r\n            Уже зарегистрированы? <Link to=\"/login\" className={commonStyles.navigationLink}>Войти</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n","import React, { FC, FormEvent, useState } from 'react';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { forgotPassword } from '../../services/actions/auth';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\nimport { TLocationState } from '../../services/types/data';\r\n\r\n\r\n\r\nexport const ForgotPasswordPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<TLocationState>();\r\n  const { isPasswordRecoveryEmailReceived } = useSelector(store => store.auth);\r\n  const [emailValue, setEmailValue] = useState('');\r\n\r\n  const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(forgotPassword(emailValue));\r\n  }\r\n\r\n   if (isPasswordRecoveryEmailReceived) {\r\n     return (<Redirect to={{ pathname: '/reset-password', state: {from: location} }} />);\r\n   }\r\n\r\n  return (\r\n    <main className={commonStyles.main}>\r\n\r\n      <div className={commonStyles.container}>\r\n        <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n\r\n        <form className={commonStyles.form} onSubmit={onFormSubmit}>\r\n          <Input\r\n            value={emailValue}\r\n            type={'email'}\r\n            placeholder={'Укажите e-mail'}\r\n            onChange={e => setEmailValue(e.target.value)}\r\n            extraClass='mt-6'\r\n          />\r\n          <Button\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            size=\"medium\"\r\n            extraClass='mt-6 mb-20'\r\n            disabled={!emailValue} >\r\n            Восстановить\r\n          </Button>\r\n        </form>\r\n\r\n        <div className={`${commonStyles.navigationBlock} mb-4`}>\r\n          <p className='text text_type_main-default text_color_inactive'>\r\n            Вспомнили пароль? <Link to=\"/login\" className={commonStyles.navigationLink}>Войти</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n","import React, { FC, FormEvent, useState } from 'react';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { resetPassword } from '../../services/actions/auth';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\nimport { TLocationState } from '../../services/types/data';\r\n\r\n\r\nexport const ResetPasswordPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<TLocationState>();\r\n\r\n  const { isResetPasswordSuccess } = useSelector(store => store.auth);\r\n\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n  const [resetCodeValue, setResetCodeValue] = useState('');\r\n\r\n  const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(resetPassword(passwordValue, resetCodeValue));\r\n  }\r\n\r\n  if ((location.state ? location.state.from?.pathname : undefined) !== '/forgot-password') {\r\n    return <Redirect to='/forgot-password' />;\r\n  };\r\n\r\n  if (isResetPasswordSuccess) {\r\n    return (<Redirect to={'/login'} />);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <main className={commonStyles.main}>\r\n\r\n      <div className={commonStyles.container}>\r\n        <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n\r\n        <form className={commonStyles.form} onSubmit={onFormSubmit}>\r\n          <PasswordInput\r\n            value={passwordValue}\r\n            onChange={e => setPasswordValue(e.target.value)}\r\n            placeholder={'Введите новый пароль'}\r\n            extraClass='mt-6'\r\n          />\r\n          <Input\r\n            value={resetCodeValue}\r\n            type={'text'}\r\n            placeholder={'Введите код из письма'}\r\n            onChange={e => setResetCodeValue(e.target.value)}\r\n            extraClass='mt-6'\r\n          />\r\n          <Button\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            size=\"medium\"\r\n            extraClass='mt-6 mb-20'\r\n            disabled={!passwordValue || !resetCodeValue} >\r\n            Сохранить\r\n          </Button>\r\n        </form>\r\n\r\n        <div className={`${commonStyles.navigationBlock} mb-4`}>\r\n          <p className='text text_type_main-default text_color_inactive'>\r\n            Вспомнили пароль? <Link to=\"/login\" className={commonStyles.navigationLink}>Войти</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n","import React, { FC, MouseEvent } from 'react';\r\nimport styles from './Navigation.module.css';\r\nimport commonStyles from '../../pages/commonStyles.module.css';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { logoutUser } from '../../services/actions/auth';\r\nimport { useDispatch } from '../../services/hooks/hooks';\r\nimport { TLocationState } from '../../services/types/data';\r\n\r\n\r\n\r\nexport const Navigation: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation<TLocationState>();\r\n\r\n    const switchNavigationFooterText = (location: { pathname: string }) => {\r\n        switch (location.pathname) {\r\n            case '/profile':\r\n                return <>В этом разделе вы можете изменить&nbsp;свои персональные данные</>;\r\n            case '/profile/orders':\r\n                return <>В этом разделе вы можете просмотреть&nbsp;свою историю заказов</>;\r\n            default:\r\n                return '';\r\n        };\r\n    };\r\n\r\n    const onExitLinkClick = (e: MouseEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(logoutUser());\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styles.navContainer}>\r\n            <nav>\r\n                <ul className={styles.list}>\r\n                    <li className={styles.listItem}>\r\n                        <NavLink\r\n                            to='/profile'\r\n                            exact={true}\r\n                            className={`${styles.navigationLink} text text_type_main-medium text_color_inactive`}\r\n                            activeClassName={commonStyles.navigationLinkActive}>\r\n                            Профиль\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={styles.listItem}>\r\n                        <NavLink\r\n                            to='/profile/orders'\r\n                            exact={true}\r\n                            className={`${styles.navigationLink} text text_type_main-medium text_color_inactive`}\r\n                            activeClassName={commonStyles.navigationLinkActive}>\r\n                            История заказов\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={styles.listItem}>\r\n                        <NavLink\r\n                            to='/login'\r\n                            exact={true}\r\n                            onClick={onExitLinkClick}\r\n                            className={`${styles.navigationLink} text text_type_main-medium text_color_inactive`}\r\n                            activeClassName={commonStyles.navigationLinkActive}>\r\n                            Выход\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <p className='text text_type_main-default text_color_inactive mt-20'>\r\n                {switchNavigationFooterText(location)}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport styles from './ProfileForm.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { refreshUserData } from '../../services/actions/auth';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nexport const ProfileForm: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(store => store.auth.user?.name);\r\n    const email = useSelector(store => store.auth.user?.email);\r\n\r\n    const [nameValue, setNameValue] = useState<string | undefined>('');\r\n    const [loginValue, setLoginValue] = useState<string | undefined>(''); //Логин на форме соответствует e-mail пользователя.\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n\r\n    const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(refreshUserData(loginValue, nameValue, passwordValue));\r\n    };\r\n\r\n    const onFormReset = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        setNameValue(name);\r\n        setLoginValue(email);\r\n        setPasswordValue('');\r\n    };\r\n\r\n    useEffect(() => {\r\n        setNameValue(name);\r\n        setLoginValue(email);\r\n      },\r\n        [name, email]);\r\n\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit} onReset={onFormReset}>\r\n            <Input\r\n                value={nameValue!}\r\n                type={'text'}\r\n                icon={'EditIcon'}\r\n                placeholder={'Имя'}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                extraClass='mb-6'\r\n            />\r\n            <Input\r\n                value={loginValue!}\r\n                type={'text'}\r\n                icon={'EditIcon'}\r\n                placeholder={'Логин'}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                extraClass='mb-6'\r\n            />\r\n            <PasswordInput\r\n                value={passwordValue}\r\n                icon={'EditIcon'}\r\n                onChange={e => setPasswordValue(e.target.value)} />\r\n\r\n            <div className={`${styles.buttonGroup} mt-6`}>\r\n                <Button htmlType=\"reset\" type=\"primary\" size=\"medium\">Отмена</Button>\r\n                <Button htmlType=\"submit\" type=\"primary\" size=\"medium\">Сохранить</Button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\nimport styles from './ProfilePage.module.css';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport { Navigation } from '../../components/Navigation/Navigation';\r\nimport { ProfileForm } from '../../components/ProfileForm/ProfileForm';\r\n\r\n\r\nexport const ProfilePage: FC = () => {\r\n  return (\r\n    <main className={commonStyles.main}>\r\n      <div className={styles.container}>\r\n        <Navigation />\r\n\r\n        <div className={styles.profileContainer}>\r\n          <ProfileForm />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React, { FC } from 'react';\r\nimport styles from './NotFoundPage.module.css';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const NotFoundPage: FC = () => {\r\n  return (\r\n    <main className={commonStyles.main}>\r\n      <div className={styles.container}>\r\n        <h1 className={`${styles.h1} text text_type_main-large`}>Error</h1>\r\n        <p className={`${styles.p1} text text_type_digits-large`}>404</p>\r\n        <p className={`${styles.p2} text text_type_main-large`}>Page not found!</p>\r\n\r\n        <div className={styles.navigationBlock}>\r\n          <p className='text text_type_main-default text_color_inactive'>\r\n            <Link to=\"/\" className={commonStyles.navigationLink}>Вернуться</Link> на главную страницу\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React, { FC } from 'react';\r\nimport { TIngredientIcon } from '../../services/types/data';\r\nimport styles from './IngredientIcon.module.css';\r\n\r\n\r\n\r\nexport const IngredientIcon: FC<TIngredientIcon> = ({ ingredient, numberToRender = 0 }) => {\r\n  return (\r\n    <div className={styles.iconContainer}>\r\n      <img src={ingredient.image} alt={ingredient.name} className={styles.image} />\r\n      {numberToRender ? (<div className={styles.overlay}>\r\n        <p className='text text_type_main-default'>{`+${numberToRender}`}</p>\r\n      </div>) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { TIngredient } from \"../services/types/data\";\r\n\r\n\r\n\r\nconst getOrderIngredients = (ingredientsArr: string[], allIngredientsArr: TIngredient[]) => {\r\n  return ingredientsArr?.map(id => {\r\n    return allIngredientsArr.find((item) => {\r\n      return item._id === id\r\n    });\r\n  });\r\n};\r\n\r\nconst getOrderPrice = (ingredientsArr: (TIngredient | undefined)[]) => {\r\n  return ingredientsArr?.reduce((sum, item) => {\r\n    return sum += item ? item.price : 0;\r\n  }, 0);\r\n};\r\n\r\n\r\nexport { getOrderIngredients, getOrderPrice };\r\n","import React from 'react';\r\nimport commonStyles from '../pages/commonStyles.module.css';\r\n\r\nexport const renderOrderStatus = (status: string, styles: string) => {\r\n    switch (status) {\r\n        case 'done':\r\n            return <p className={`${styles} ${commonStyles.statusDone}`}>{'Выполнен'}</p>;\r\n        case 'pending':\r\n            return <p className={styles}>{'Готовится'}</p>;\r\n        case 'created':\r\n            return <p className={styles}>{'Создан'}</p>;\r\n        case 'cancelled':\r\n            return <p className={`${styles} ${commonStyles.statusCancelled}`}>{'Отменен'}</p>;\r\n        default:\r\n            return <p className={styles}>{status}</p>\r\n    }\r\n}\r\n","import React, { FC, useCallback, useMemo } from 'react';\r\nimport styles from './Order.module.css';\r\nimport { CurrencyIcon, FormattedDate } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IngredientIcon } from '../IngredientIcon/IngredientIcon';\r\nimport { INGREDIENT_ICON_VIEWED_IN_ORDER_CARD_MAX } from '../../utils/constants';\r\nimport { SetModalAction } from '../../services/actions/modal';\r\nimport { getOrderIngredients, getOrderPrice } from '../../utils/utils';\r\nimport { renderOrderStatus } from '../../utils/interface';\r\nimport { TIngredient, TOrderComponent } from '../../services/types/data';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nexport const Order: FC<TOrderComponent> = ({ data, renderStatus = false }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { number, createdAt, name, status, ingredients } = data;\r\n  const { allIngredients } = useSelector(store => store.allIngredients);\r\n\r\n  const orderIngredients = useMemo(() => {\r\n    return getOrderIngredients(ingredients, allIngredients);\r\n  }, [ingredients, allIngredients]);\r\n\r\n  const orderPrice = useMemo(() => {\r\n    return getOrderPrice(orderIngredients);\r\n  }, [orderIngredients]);\r\n\r\n\r\n  const outputIngredientIcons = (array: (TIngredient | undefined)[]) => {\r\n    return array.map((item, index) => {\r\n      if (index < INGREDIENT_ICON_VIEWED_IN_ORDER_CARD_MAX) {\r\n        return <li className={styles.listItem} key={index} style={{ left: index * 48, zIndex: array.length - index }}>\r\n          <IngredientIcon ingredient={item!} />\r\n        </li>\r\n      } else if (index === INGREDIENT_ICON_VIEWED_IN_ORDER_CARD_MAX) {\r\n        return <li className={styles.listItem} key={index} style={{ left: index * 48, zIndex: array.length - index }}>\r\n          <IngredientIcon ingredient={item!} numberToRender={array.length - index} />\r\n        </li>\r\n      } else return null;\r\n    });\r\n  };\r\n\r\n  const onOrderClick = useCallback(() => {\r\n    dispatch(SetModalAction('orderDetails'));\r\n  }, [dispatch]);\r\n\r\n\r\n\r\n  return (\r\n    <li className='mr-2' onClick={onOrderClick}>\r\n      <div className={`${styles.container} p-6 mb-4`}>\r\n\r\n        <div className={`${styles.groupIdDate} mb-6`}>\r\n          <p className=\"text text_type_digits-default\">{`#${number}`}</p>\r\n          <div className='text text_type_main-default text_color_inactive'>\r\n            <p className={styles.dateTimezoneOffset}>\r\n              <FormattedDate date={new Date(createdAt)} />\r\n              {` i-GMT+${-new Date(createdAt).getTimezoneOffset() / 60}`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <p className='text text_type_main-medium'>{name}</p>\r\n\r\n        {renderStatus && renderOrderStatus(status, 'text text_type_main-default mt-2')}\r\n\r\n        <div className={`${styles.groupImagesPrice} mt-6`}>\r\n          <ul className={styles.list}>\r\n            {outputIngredientIcons(orderIngredients)}\r\n          </ul>\r\n\r\n          <div className={`${styles.groupPrice} pl-6`}>\r\n            <p className=\"text text_type_digits-default pr-2\">{orderPrice.toLocaleString()}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, { FC } from 'react';\r\nimport styles from './OrdersList.module.css';\r\nimport { Order } from '../Order/Order';\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { TLocationState, TOrdersListComponent } from '../../services/types/data';\r\nimport { useSelector } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nexport const OrdersList: FC<TOrdersListComponent> = ({ renderStatus = false }) => {\r\n  const location = useLocation<TLocationState>();\r\n  const { orders } = useSelector(store => store.ws);\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {orders && orders.map(item => {\r\n        return (\r\n          <Link to={{ pathname: `${match.path}/${item._id}`, state: { background: location } }} className={styles.link} key={item._id}>\r\n            <Order data={item} renderStatus={renderStatus} />\r\n          </Link>);\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","export const WS_CONNECTION_OPEN: 'WS_CONNECTION_OPEN' = 'WS_CONNECTION_OPEN';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSE: 'WS_CONNECTION_CLOSE' = 'WS_CONNECTION_CLOSE';\r\nexport const WS_CONNECTION_DISCONNECT: 'WS_CONNECTION_DISCONNECT' = 'WS_CONNECTION_DISCONNECT';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\n","import { WS_CONNECTION_CLOSE, WS_CONNECTION_OPEN } from '../actions/action-types/webSocket';\r\nimport { AppDispatch, AppThunk, WsDispatch } from '../types';\r\nimport { TWsCloseConnectionAction, TWsInitConnectionAction } from '../types/actions';\r\n\r\n\r\n\r\nexport const WsInitConnectionAction = (payload: string): TWsInitConnectionAction => ({\r\n  type: WS_CONNECTION_OPEN,\r\n  payload\r\n});\r\n\r\nexport const WsInitAuthConnectionAction = (payload: string): TWsInitConnectionAction => ({\r\n  type: WS_CONNECTION_OPEN,\r\n  payload\r\n});\r\n\r\nexport const WsCloseConnectionAction = (): TWsCloseConnectionAction => ({\r\n  type: WS_CONNECTION_CLOSE\r\n});\r\n\r\n\r\n\r\n\r\nexport const wsInitConnection: AppThunk = () => (dispatch: WsDispatch) => {\r\n    dispatch(WsInitConnectionAction('/all'));\r\n};\r\n\r\nexport const wsInitAuthConnection: AppThunk = (accessToken: string | undefined) => (dispatch: WsDispatch) => {\r\n    dispatch(WsInitAuthConnectionAction(`?token=${accessToken ? accessToken : ''}`));\r\n};\r\n\r\nexport const wsCloseConnection: AppThunk = () => (dispatch: WsDispatch) => {\r\n    dispatch(WsCloseConnectionAction());\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport styles from './OrdersPage.module.css';\r\nimport { Navigation } from '../../components/Navigation/Navigation';\r\nimport { OrdersList } from '../../components/OrdersList/OrdersList';\r\nimport { wsInitAuthConnection, wsCloseConnection } from '../../services/actions/webSocket';\r\nimport { getCookie } from '../../utils/cookie';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\n\r\n\r\nexport const OrdersPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const token = getCookie('token');\r\n  const { wsConnected } = useSelector(store => store.ws);\r\n\r\n  useEffect(() => {\r\n    dispatch(wsInitAuthConnection(token));\r\n\r\n    return () => {\r\n      dispatch(wsCloseConnection());\r\n    }\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <main className={commonStyles.main}>\r\n      <div className={styles.container}>\r\n        <Navigation />\r\n\r\n        <div className={styles.ordersListContainer}>\r\n          {!wsConnected ? (\r\n            <Loader size={'superLarge'} />\r\n          ) : (\r\n            <OrdersList renderStatus={true} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from '../../services/hooks/hooks';\r\nimport { IOrderDataResponse } from '../../services/types/data';\r\nimport styles from './OrderStats.module.css';\r\n\r\n\r\n\r\nexport const OrderStats: FC = () => {\r\n  const { orders, total, totalToday } = useSelector(store => store.ws);\r\n\r\n  const ordersStatusDone = orders?.filter(item => item.status === 'done').slice(0, 30);\r\n  const ordersStatusPending = orders?.filter(item => item.status === 'pending').slice(0, 30);\r\n\r\n  const displayOrderNumber = (ordersArray: IOrderDataResponse[], isDone = false) => {\r\n    return ordersArray.map(item => {\r\n      return (\r\n        <li key={item._id} className={`${styles.listItem} mb-2`}>\r\n          <p className={`${isDone ? styles.orderDone : ''} text text_type_digits-default`}>{item.number}</p>\r\n        </li>);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.container} pt-15 ml-15`}>\r\n\r\n      <div className={`${styles.ordersBoard} mb-15`}>\r\n        <div className={styles.groupList}>\r\n          <h2 className='text text_type_main-medium mb-6'>Готовы:</h2>\r\n\r\n          <ul className={styles.list}>\r\n            {displayOrderNumber(ordersStatusDone, true)}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={`${styles.groupList} pl-6`}>\r\n          <h2 className='text text_type_main-medium mb-6'>В работе:</h2>\r\n\r\n          <ul className={styles.list}>\r\n            {displayOrderNumber(ordersStatusPending)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.groupTotal}>\r\n        <h2 className='text text_type_main-medium'>Выполнено за все время:</h2>\r\n        <p className={`${styles.glowText} text text_type_digits-large mb-15`}>{total.toLocaleString()}</p>\r\n      </div>\r\n\r\n      <div className={styles.groupTotal}>\r\n        <h2 className='text text_type_main-medium'>Выполнено за сегодня:</h2>\r\n        <p className={`${styles.glowText} text text_type_digits-large`}>{totalToday}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { FC, useEffect } from 'react';\r\nimport commonStyles from '../commonStyles.module.css';\r\nimport styles from './FeedPage.module.css';\r\nimport { OrdersList } from '../../components/OrdersList/OrdersList';\r\nimport { OrderStats } from '../../components/OrderStats/OrderStats';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { wsInitConnection, wsCloseConnection } from '../../services/actions/webSocket';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nexport const FeedPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { wsConnected } = useSelector(store => store.ws);\r\n\r\n  useEffect(() => {\r\n    dispatch(wsInitConnection());\r\n\r\n    return () => {\r\n      dispatch(wsCloseConnection());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <main className={commonStyles.main}>\r\n\r\n      <div className={styles.container}>\r\n        {!wsConnected ? (\r\n          <Loader size={'superLarge'} />\r\n        ) : (\r\n          <>\r\n            <div className={`${styles.ordersListContainer} pl-5`}>\r\n              <h1 className='text text_type_main-large mb-5'>Лента заказов</h1>\r\n\r\n              <OrdersList />\r\n            </div>\r\n\r\n            <OrderStats />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n","export const GET_ALL_INGREDIENTS_REQUEST: 'GET_ALL_INGREDIENTS_REQUEST' = 'GET_ALL_INGREDIENTS_REQUEST';\r\nexport const GET_ALL_INGREDIENTS_SUCCESS: 'GET_ALL_INGREDIENTS_SUCCESS' = 'GET_ALL_INGREDIENTS_SUCCESS';\r\nexport const GET_ALL_INGREDIENTS_FAILED: 'GET_ALL_INGREDIENTS_FAILED' = 'GET_ALL_INGREDIENTS_FAILED';\r\n","import { getAllIngredientsRequest } from '../../utils/api';\r\nimport { AppDispatch, AppThunk } from '../types';\r\nimport { TGetAllIngredientsFailedAction, TGetAllIngredientsRequestAction, TGetAllIngredientsSuccessAction } from '../types/actions';\r\nimport {\r\n  GET_ALL_INGREDIENTS_REQUEST,\r\n  GET_ALL_INGREDIENTS_SUCCESS,\r\n  GET_ALL_INGREDIENTS_FAILED\r\n} from '../../services/actions/action-types/allIngredients';\r\nimport { TIngredient } from '../types/data';\r\n\r\n\r\n\r\nexport const GetAllIngredientsRequestAction = (): TGetAllIngredientsRequestAction => ({\r\n  type: GET_ALL_INGREDIENTS_REQUEST\r\n});\r\n\r\nexport const GetAllIngredientsSuccessAction = (items: TIngredient[]): TGetAllIngredientsSuccessAction => ({\r\n  type: GET_ALL_INGREDIENTS_SUCCESS,\r\n  items\r\n});\r\n\r\nexport const GetAllIngredientsFailedAction = (): TGetAllIngredientsFailedAction => ({\r\n  type: GET_ALL_INGREDIENTS_FAILED\r\n});\r\n\r\n\r\n\r\nexport const getAllIngredients: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch(GetAllIngredientsRequestAction());\r\n\r\n    getAllIngredientsRequest().then(res => {\r\n      if (res && res.success) {\r\n        dispatch(GetAllIngredientsSuccessAction(res.data));\r\n      } else {\r\n        dispatch(GetAllIngredientsFailedAction());\r\n      }\r\n    });\r\n}\r\n","import React, { FC } from 'react';\r\nimport { TOrderInfoComponent } from '../../services/types/data';\r\nimport styles from './OrderInfo.module.css';\r\n\r\n\r\n\r\nconst OrderInfo: FC<TOrderInfoComponent> = ({ orderId, orderStatus, orderInfoMessage }) => {\r\n  return (\r\n    <div className={styles.content}>\r\n      <h3 className={`${styles.header} text text_type_digits-large mt-4`}>{orderId}</h3>\r\n      <p className='text text_type_main-medium mt-8'>идентификатор заказа</p>\r\n      <div className={`${styles.image} mt-15`} ></div>\r\n      <p className='text text_type_main-default mt-15'>{orderStatus}</p>\r\n      <p className='text text_type_main-default text_color_inactive mt-2 mb-30'>{orderInfoMessage}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderInfo;\r\n","import React, { FC, useMemo } from 'react';\r\n/* import { useSelector } from 'react-redux'; */\r\nimport styles from './OrderDetails.module.css';\r\nimport { CurrencyIcon, FormattedDate } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IngredientIcon } from '../IngredientIcon/IngredientIcon';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getOrderIngredients, getOrderPrice } from '../../utils/utils';\r\nimport { renderOrderStatus } from '../../utils/interface';\r\nimport { useSelector } from '../../services/hooks/hooks';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\n\r\nexport const OrderDetails: FC = () => {\r\n  const { id } : { id: string} = useParams();\r\n\r\n  const orders = useSelector(store => store.ws.orders);\r\n  const order = orders?.find(item => item._id === id); /* const order = orders ? orders.find(item => item._id === id) : undefined; */\r\n\r\n  const { allIngredients } = useSelector(store => store.allIngredients);\r\n\r\n  const orderIngredients = useMemo(() => {\r\n    return getOrderIngredients(order ? order.ingredients : [], allIngredients);\r\n  }, [order?.ingredients, allIngredients]);\r\n\r\n  const orderPrice = useMemo(() => {\r\n    return getOrderPrice(orderIngredients);\r\n  }, [orderIngredients]);\r\n\r\n  //Получим массив уникальных значений ингредиентов.\r\n  const uniqueIngredients = Array.from(new Set(orderIngredients));\r\n\r\n  //Определим функцию для подсчета количества ингредиентов в заказе.\r\n  const getIngredientCount = (ingredient: TIngredient) => {\r\n    return orderIngredients.filter(item => {\r\n      return item === ingredient;\r\n    }).length;\r\n  };\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.content} pt-10 pb-10`}>\r\n\r\n      <div className={styles.idContainer}>\r\n        <p className=\"text text_type_digits-default\">{`#${order.number}`}</p>\r\n      </div>\r\n\r\n      <h1 className=\"text text_type_main-medium mt-10 mb-3\">{order.name}</h1>\r\n\r\n      {renderOrderStatus(order.status, `text text_type_main-default ${styles.addBox}`)}\r\n\r\n      <p className=\"text text_type_main-medium mt-15 mb-6\">{'Состав:'}</p>\r\n      <ul className={styles.ingredientsList}>\r\n        {uniqueIngredients.map((item, index) => <li className={`${styles.listItem} pb-4 pr-6`} key={index}>\r\n          <div className={styles.groupIngredientIcoName}>\r\n            <IngredientIcon ingredient={item!} />\r\n            <p className=\"text text_type_main-default pl-4 pr-4\">{item!.name}</p>\r\n          </div>\r\n\r\n          <div className={styles.container}>\r\n            <p className={`${styles.price} text text_type_digits-default`}>{`${getIngredientCount(item!)} x ${item!.price.toLocaleString()}`}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </li>)}\r\n      </ul>\r\n\r\n      <div className={`${styles.footerContainer}  pt-10`}>\r\n        <p className={`${styles.dateTimezoneOffset} text text_type_main-default text_color_inactive`}>\r\n          <FormattedDate date={new Date(order.createdAt)} />\r\n          {` i-GMT+${-new Date(order.createdAt).getTimezoneOffset() / 60}`}\r\n        </p>\r\n\r\n        <div className={styles.container}>\r\n          <p className={`${styles.price} text text_type_digits-default`}>{orderPrice.toLocaleString()}</p>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { OrderDetails } from '../../components/OrderDetails/OrderDetails';\r\nimport { wsCloseConnection, wsInitAuthConnection, wsInitConnection } from '../../services/actions/webSocket';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\nimport { TLocationState } from '../../services/types/data';\r\nimport { getCookie } from '../../utils/cookie';\r\nimport commonStyles from '../commonStyles.module.css';\r\n\r\n\r\nexport const OrderDetailsPage: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation<TLocationState>();\r\n    const token = getCookie('token');\r\n    const { wsConnected } = useSelector(store => store.ws);\r\n\r\n    useEffect(() => {\r\n        if (location.pathname.includes('/feed')) {\r\n            dispatch(wsInitConnection());\r\n        };\r\n        if (location.pathname.includes('/profile/orders')) {\r\n            dispatch(wsInitAuthConnection(token));\r\n        };\r\n\r\n        return () => {\r\n            dispatch(wsCloseConnection());\r\n        }\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <main className={commonStyles.main}>\r\n            {!wsConnected ? (\r\n                <Loader size={'superLarge'} />\r\n            ) : (\r\n                <OrderDetails />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport appStyles from './App.module.css';\r\nimport AppHeader from '../AppHeader/AppHeader';\r\nimport Modal from '../Modal/Modal';\r\nimport IngredientDetails from '../IngredientDetails/IngredientDetails';\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { ProtectedRoute } from \"../ProtectedRoute/ProtectedRoute\";\r\nimport {\r\n  LoginPage,\r\n  MainPage,\r\n  RegistrationPage,\r\n  ForgotPasswordPage,\r\n  ResetPasswordPage,\r\n  ProfilePage,\r\n  NotFoundPage,\r\n  OrdersPage,\r\n  FeedPage\r\n} from '../../pages/index';\r\nimport { getUserData } from '../../services/actions/auth';\r\nimport { getAllIngredients } from '../../services/actions/allIngredients';\r\nimport { ResetModalAction } from '../../services/actions/modal';\r\nimport OrderInfo from '../OrderInfo/OrderInfo';\r\nimport { OrderDetails } from '../OrderDetails/OrderDetails';\r\nimport Loader from '../Loader/Loader';\r\nimport { ConstructorCleanUpAction } from '../../services/actions/constructorIngredients';\r\nimport { OrderDetailsPage } from '../../pages/OrderDetailsPage/OrderDetailsPage';\r\nimport { TLocationState } from '../../services/types/data';\r\nimport { useDispatch, useSelector } from '../../services/hooks/hooks';\r\n\r\n\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation<TLocationState>();\r\n\r\n  const background = location.state?.background;/* const background = location.state ? location.state.background : undefined; */\r\n\r\n  const { isOpened, content } = useSelector(store => store.modal);\r\n  const { orderData, orderDataRequest } = useSelector(store => store.orderData);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserData());\r\n  },\r\n    [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllIngredients())\r\n  }, [dispatch]);\r\n\r\n\r\n  const onIngredientModalClose = (background: { pathname: string }) => {\r\n    dispatch(ResetModalAction());\r\n    history.replace({ pathname: background.pathname });\r\n  };\r\n\r\n  const onOrderInfoModalClose = () => {\r\n    dispatch(ResetModalAction());\r\n    if (orderData.success) dispatch(ConstructorCleanUpAction());\r\n  };\r\n\r\n  const onOrderDetailsModalClose = () => {\r\n    dispatch(ResetModalAction());\r\n    history.replace({ pathname: background.pathname });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={appStyles.page}>\r\n      <AppHeader />\r\n\r\n      <Switch location={background || location}>\r\n        <Route path='/' exact={true}>\r\n          <MainPage />\r\n        </Route>\r\n        <ProtectedRoute path='/login' exact={true} onlyUnAuth={true}>\r\n          <LoginPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/register' exact={true} onlyUnAuth={true}>\r\n          <RegistrationPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/forgot-password' exact={true} onlyUnAuth={true}>\r\n          <ForgotPasswordPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/reset-password' exact={true} onlyUnAuth={true}>\r\n          <ResetPasswordPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/profile' exact={true}>\r\n          <ProfilePage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/profile/orders' exact={true}>\r\n          <OrdersPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n          <OrderDetailsPage />\r\n        </ProtectedRoute>\r\n        <Route path='/ingredients/:id' exact={true}>\r\n          <IngredientDetails />\r\n        </Route>\r\n        <Route path='/feed' exact={true}>\r\n          <FeedPage />\r\n        </Route>\r\n        <Route path='/feed/:id' exact={true}>\r\n          <OrderDetailsPage />\r\n        </Route>\r\n        <Route>\r\n          <NotFoundPage />\r\n        </Route>\r\n      </Switch>\r\n\r\n      {background &&\r\n        <>\r\n          <Route path='/ingredients/:id' exact={true}>\r\n            <Modal title='Детали ингредиента' onClose={() => onIngredientModalClose(background)} >\r\n              <IngredientDetails />\r\n            </Modal>\r\n          </Route>\r\n          <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n            <Modal onClose={() => onOrderDetailsModalClose()} >\r\n              <OrderDetails />\r\n            </Modal>\r\n          </ProtectedRoute>\r\n          <Route path='/feed/:id' exact={true}>\r\n            <Modal onClose={() => onOrderDetailsModalClose()} >\r\n              <OrderDetails />\r\n            </Modal>\r\n          </Route>\r\n        </>\r\n      }\r\n      {isOpened && (content === 'orderInfo') &&\r\n        < Modal onClose={() => onOrderInfoModalClose()} >\r\n          {orderDataRequest ? (<Loader size='superLarge' />) :\r\n            orderData.success ? (\r\n              <OrderInfo\r\n                orderId={orderData.order.number ? orderData.order.number.toString() : ''}\r\n                orderStatus='Ваш заказ начали готовить'\r\n                orderInfoMessage='Дождитесь готовности на орбитальной станции'\r\n              />) : (\r\n              <OrderInfo\r\n                orderId=''\r\n                orderStatus='В процессе оформления заказа возникла ошибка'\r\n                orderInfoMessage='Попробуйте оформить заказ позже'\r\n              />\r\n            )}\r\n        </Modal>}\r\n    </div >\r\n  );\r\n}\r\n","import { getCookie } from \"../../utils/cookie\";\r\nimport { getUserData } from \"../actions/auth\";\r\nimport { wsInitAuthConnection } from \"../actions/webSocket\";\r\nimport { Middleware, MiddlewareAPI } from \"redux\";\r\nimport { TWsActions, TWs_Actions } from \"../types/actions\";\r\nimport { AppDispatch, RootState, TWebSocket } from \"../types\";\r\n\r\n\r\n\r\nexport const socketMiddleware = (wsUrl: string, wsActions: TWs_Actions): Middleware => {\r\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: TWebSocket = null;\r\n    let isConnected = false;\r\n    let reconnectTimer = 0;\r\n\r\n    return (next: (action: TWsActions) => {}) => (action: TWsActions) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const { wsInit, wsOnOpen, wsOnError, wsOnClose, wsDisconnect, wsOnMessage /*, wsSendMessage */ } = wsActions;\r\n\r\n      if (type === wsInit) {\r\n        console.log('WS connection open initiated!');\r\n        socket = new WebSocket(`${wsUrl}${payload}`);\r\n        isConnected = true;\r\n      } else if (type === wsOnClose && socket) {\r\n        console.log('WS connection close initiated!');\r\n        isConnected = false;\r\n        clearTimeout(reconnectTimer);\r\n        reconnectTimer = 0;\r\n\r\n        socket.close(1000, 'WS is closed.');\r\n      }\r\n\r\n      if (socket) {\r\n        socket.onopen = () => {\r\n          dispatch({ type: wsOnOpen });\r\n        }\r\n        socket.onerror = event => {\r\n          console.log('WS onError.', event);\r\n          /* dispatch({ type: wsOnError, payload: event }); */ //---?\r\n        }\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n\r\n          dispatch({ type: wsOnMessage, payload: restParsedData });\r\n        }\r\n        socket.onclose = (event: CloseEvent) => {\r\n          if (event.code !== 1000) {\r\n            console.log('WS onClose.', event);\r\n            dispatch({ type: wsOnError, payload: event.code.toString() });\r\n          };\r\n\r\n          dispatch({ type: wsDisconnect });\r\n\r\n          if (isConnected) {\r\n            dispatch(getUserData());\r\n\r\n            reconnectTimer = window.setTimeout(() => {\r\n              console.log('Try to reconnect WS...');\r\n              dispatch(wsInitAuthConnection(getCookie('token')));\r\n            }, 3000);\r\n          }\r\n        }\r\n/*         if (type === wsSendMessage) {\r\n          const orders = { ...payload };\r\n\r\n          socket.send(JSON.stringify(orders));\r\n        } */\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import {\r\n  GET_ALL_INGREDIENTS_REQUEST,\r\n  GET_ALL_INGREDIENTS_SUCCESS,\r\n  GET_ALL_INGREDIENTS_FAILED\r\n} from '../actions/action-types/allIngredients';\r\nimport { TGetAllIngredientsActions } from '../types/actions';\r\nimport { TIngredient } from '../types/data';\r\n\r\n\r\nexport type TAllIngredientsState = {\r\n  allIngredients: TIngredient[],\r\n  allIngredientsRequest: boolean,\r\n  allIngredientsFailed: boolean\r\n}\r\n\r\nconst initialState: TAllIngredientsState = {\r\n  allIngredients: [],\r\n  allIngredientsRequest: false,\r\n  allIngredientsFailed: false\r\n};\r\n\r\n\r\n\r\nexport const allIngredientsReducer = (state = initialState, action: TGetAllIngredientsActions): TAllIngredientsState => {\r\n  switch (action.type) {\r\n    case GET_ALL_INGREDIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        allIngredientsRequest: true\r\n      }\r\n    }\r\n    case GET_ALL_INGREDIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        allIngredientsRequest: false,\r\n        allIngredientsFailed: false,\r\n        allIngredients: action.items\r\n      }\r\n    }\r\n    case GET_ALL_INGREDIENTS_FAILED: {\r\n      return {\r\n        ...state,\r\n        allIngredientsRequest: false,\r\n        allIngredientsFailed: true\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  };\r\n};\r\n","import {\r\n  ADD_BUN_TO_CONSTRUCTOR,\r\n  ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR,\r\n  DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR,\r\n  REORDER_STUFFING_ELEMENTS,\r\n  CONSTRUCTOR_CLEANUP\r\n} from '../actions/action-types/constructorIngredients';\r\nimport { TConstructorIngredientsActions } from '../types/actions';\r\nimport { IExtendedIngredient, TIngredient } from '../types/data';\r\n\r\n\r\n\r\nexport type TConstructorState = {\r\n  bun: TIngredient | null,\r\n  stuffing: Array<IExtendedIngredient>\r\n}\r\n\r\n\r\nconst initialState: TConstructorState = {\r\n  bun: null,\r\n  stuffing: []\r\n};\r\n\r\n\r\n\r\nexport const constructorIngredientsReducer = (state = initialState, action: TConstructorIngredientsActions): TConstructorState => {\r\n  switch (action.type) {\r\n    case ADD_BUN_TO_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        bun: action.item\r\n      }\r\n    }\r\n    case ADD_STUFFING_ELEMENT_TO_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        stuffing: [...state.stuffing, {...action.payload.item, id: action.payload.id}]\r\n      }\r\n    }\r\n    case DELETE_STUFFING_ELEMENT_FROM_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        stuffing: [...state.stuffing].filter(item => item.id !== action.payload.id)\r\n      }\r\n    }\r\n    case REORDER_STUFFING_ELEMENTS: {\r\n      const reorderStuffing = [...state.stuffing];\r\n\r\n      reorderStuffing.splice(\r\n        action.payload.dragIndex,\r\n        0,\r\n        reorderStuffing.splice(action.payload.dropIndex, 1)[0]\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        stuffing: reorderStuffing\r\n      }\r\n    }\r\n    case CONSTRUCTOR_CLEANUP: {\r\n      return initialState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  };\r\n};\r\n","import {\r\n  GET_ORDER_DATA_REQUEST,\r\n  GET_ORDER_DATA_SUCCESS,\r\n  GET_ORDER_DATA_FAILED\r\n} from '../actions/action-types/orderData';\r\nimport { TGetOrderDataActions } from '../types/actions';\r\nimport { TOrderDetails } from '../types/data';\r\n\r\n\r\n\r\nexport type TOrderDetailsState = {\r\n  orderData: TOrderDetails,\r\n  orderDataRequest: boolean\r\n}\r\n\r\nconst initialState: TOrderDetailsState = {\r\n  orderData: {\r\n    name: \"\",\r\n    order: {\r\n      number: null,\r\n    },\r\n    success: false\r\n  },\r\n  orderDataRequest: false\r\n};\r\n\r\n\r\n\r\nexport const orderDataReducer = (state = initialState, action: TGetOrderDataActions): TOrderDetailsState => {\r\n  switch (action.type) {\r\n    case GET_ORDER_DATA_REQUEST: {\r\n      return {\r\n        ...state,\r\n        orderDataRequest: true\r\n      };\r\n    }\r\n    case GET_ORDER_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderDataRequest: false,\r\n        orderData: action.orderData\r\n      };\r\n    }\r\n    case GET_ORDER_DATA_FAILED: {\r\n      return initialState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  };\r\n};\r\n","import {\r\n  REGISTRATION_USER_REQUEST,\r\n  REGISTRATION_USER_SUCCESS,\r\n  REGISTRATION_USER_FAILED,\r\n  LOGIN_USER_REQUEST,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAILED,\r\n  LOGOUT_USER_REQUEST,\r\n  LOGOUT_USER_SUCCESS,\r\n  LOGOUT_USER_FAILED,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAILED,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAILED,\r\n  GET_USERDATA_REQUEST,\r\n  GET_USERDATA_SUCCESS,\r\n  GET_USERDATA_FAILED,\r\n  REFRESH_USERDATA_REQUEST,\r\n  REFRESH_USERDATA_SUCCESS,\r\n  REFRESH_USERDATA_FAILED,\r\n  UPDATE_TOKEN_REQUEST,\r\n  UPDATE_TOKEN_SUCCESS,\r\n  UPDATE_TOKEN_FAILED\r\n} from '../actions/action-types/auth';\r\nimport { setCookie, deleteCookie } from '../../utils/cookie';\r\nimport { TAuthActions } from '../types/actions';\r\nimport { TUser } from '../types/data';\r\n\r\n\r\n\r\nexport type TAuthState = {\r\n  user: TUser | null,\r\n  registrationRequest: boolean,\r\n  registrationFailed: boolean,\r\n  registrationFailedMessage: string,\r\n  loginRequest: boolean,\r\n  loginFailed: boolean,\r\n  loginFailedMessage: string,\r\n  logoutRequest: boolean,\r\n  logoutFailed: boolean,\r\n  logoutFailedMessage: string,\r\n  forgotPasswordRequest: boolean,\r\n  forgotPasswordFailed: boolean,\r\n  forgotPasswordMessage: string,\r\n  resetPasswordRequest: boolean,\r\n  resetPasswordFailed: boolean,\r\n  resetPasswordMessage: string,\r\n  getUserDataRequest: boolean,\r\n  getUserDataFailed: boolean,\r\n  getUserDataMessage: string\r\n  refreshUserDataRequest: boolean,\r\n  refreshUserDataFailed: boolean,\r\n  refreshUserDataMessage: string,\r\n  updateTokenRequest: boolean,\r\n  updateTokenFailed: boolean,\r\n  updateTokenMessage: string,\r\n  isPasswordRecoveryEmailReceived: boolean,\r\n  isResetPasswordSuccess: boolean\r\n}\r\n\r\nconst initialState: TAuthState = {\r\n  user: null,\r\n  registrationRequest: false,\r\n  registrationFailed: false,\r\n  registrationFailedMessage: '',\r\n  loginRequest: false,\r\n  loginFailed: false,\r\n  loginFailedMessage: '',\r\n  logoutRequest: false,\r\n  logoutFailed: false,\r\n  logoutFailedMessage: '',\r\n  forgotPasswordRequest: false,\r\n  forgotPasswordFailed: false,\r\n  forgotPasswordMessage: '',\r\n  resetPasswordRequest: false,\r\n  resetPasswordFailed: false,\r\n  resetPasswordMessage: '',\r\n  getUserDataRequest: false,\r\n  getUserDataFailed: false,\r\n  getUserDataMessage: '',\r\n  refreshUserDataRequest: false,\r\n  refreshUserDataFailed: false,\r\n  refreshUserDataMessage: '',\r\n  updateTokenRequest: false,\r\n  updateTokenFailed: false,\r\n  updateTokenMessage: '',\r\n  isPasswordRecoveryEmailReceived: false,\r\n  isResetPasswordSuccess: false\r\n};\r\n\r\n\r\n\r\nexport const authReducer = (state = initialState, action: TAuthActions): TAuthState => {\r\n  switch (action.type) {\r\n    case REGISTRATION_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: true\r\n      }\r\n    }\r\n    case REGISTRATION_USER_SUCCESS: {\r\n      const { user, accessToken, refreshToken } = action.data;\r\n\r\n      setCookie('token', accessToken.split('Bearer ')[1]);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n      console.log('Registration success!');\r\n\r\n      return {\r\n        ...state,\r\n        registrationRequest: false,\r\n        registrationFailed: false,\r\n        registrationFailedMessage: '',\r\n        user: user\r\n      }\r\n    }\r\n    case REGISTRATION_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: false,\r\n        registrationFailed: true,\r\n        registrationFailedMessage: action.err\r\n      }\r\n    }\r\n    case LOGIN_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loginRequest: true\r\n      }\r\n    }\r\n    case LOGIN_USER_SUCCESS: {\r\n      const { user, accessToken, refreshToken } = action.data;\r\n\r\n      setCookie('token', accessToken.split('Bearer ')[1]);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n      console.log('Login success!');\r\n\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginFailed: false,\r\n        loginFailedMessage: '',\r\n        user: user\r\n      }\r\n    }\r\n    case LOGIN_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginFailed: true,\r\n        loginFailedMessage: action.err\r\n      }\r\n    }\r\n    case LOGOUT_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        logoutRequest: true\r\n      }\r\n    }\r\n    case LOGOUT_USER_SUCCESS: {\r\n      deleteCookie('token');\r\n      localStorage.removeItem('refreshToken');\r\n      console.log('Logout success!');\r\n\r\n      return {\r\n        ...state,\r\n        logoutRequest: false,\r\n        logoutFailed: false,\r\n        logoutFailedMessage: '',\r\n        user: initialState.user\r\n      }\r\n    }\r\n    case LOGOUT_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        logoutRequest: false,\r\n        logoutFailed: true,\r\n        logoutFailedMessage: action.err\r\n      }\r\n    }\r\n    case FORGOT_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: true\r\n      }\r\n    }\r\n    case FORGOT_PASSWORD_SUCCESS: {\r\n      const { message } = action.data;\r\n      console.log('Password recovery sucess : ', message);\r\n\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordFailed: false,\r\n        forgotPasswordMessage: message,\r\n        isPasswordRecoveryEmailReceived: true\r\n      }\r\n    }\r\n    case FORGOT_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordFailed: true,\r\n        forgotPasswordMessage: action.err\r\n      }\r\n    }\r\n    case RESET_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: true\r\n      }\r\n    }\r\n    case RESET_PASSWORD_SUCCESS: {\r\n      const { message } = action.data;\r\n      console.log('Password reset sucess : ', message);\r\n\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: false,\r\n        resetPasswordMessage: message,\r\n        isPasswordRecoveryEmailReceived: false,\r\n        isResetPasswordSuccess: true\r\n      }\r\n    }\r\n    case RESET_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: true,\r\n        resetPasswordMessage: action.err\r\n      }\r\n    }\r\n    case GET_USERDATA_REQUEST: {\r\n      return {\r\n        ...state,\r\n        getUserDataRequest: true\r\n      }\r\n    }\r\n    case GET_USERDATA_SUCCESS: {\r\n      const { user } = action.data;\r\n      console.log('User data received successfully!');\r\n\r\n      return {\r\n        ...state,\r\n        getUserDataRequest: false,\r\n        getUserDataFailed: false,\r\n        getUserDataMessage: '',\r\n        user: user\r\n      }\r\n    }\r\n    case GET_USERDATA_FAILED: {\r\n      return {\r\n        ...state,\r\n        getUserDataRequest: false,\r\n        getUserDataFailed: true,\r\n        getUserDataMessage: action.err\r\n      }\r\n    }\r\n    case REFRESH_USERDATA_REQUEST: {\r\n      return {\r\n        ...state,\r\n        refreshUserDataRequest: true\r\n      }\r\n    }\r\n    case REFRESH_USERDATA_SUCCESS: {\r\n      const { user } = action.data;\r\n      console.log('User data refreshed successfully!');\r\n\r\n      return {\r\n        ...state,\r\n        refreshUserDataRequest: false,\r\n        refreshUserDataFailed: false,\r\n        refreshUserDataMessage: '',\r\n        user: user\r\n      }\r\n    }\r\n    case REFRESH_USERDATA_FAILED: {\r\n      return {\r\n        ...state,\r\n        refreshUserDataRequest: false,\r\n        refreshUserDataFailed: true,\r\n        refreshUserDataMessage: action.err\r\n      }\r\n    }\r\n    case UPDATE_TOKEN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        updateTokenRequest: true\r\n      }\r\n    }\r\n    case UPDATE_TOKEN_SUCCESS: {\r\n      const { accessToken, refreshToken } = action.data;\r\n\r\n      setCookie('token', accessToken.split('Bearer ')[1]);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n      console.log('Access and refresh tokens update successfully!');\r\n\r\n      return {\r\n        ...state,\r\n        updateTokenRequest: false,\r\n        updateTokenFailed: false,\r\n        updateTokenMessage: ''\r\n      }\r\n    }\r\n    case UPDATE_TOKEN_FAILED: {\r\n      return {\r\n        ...state,\r\n        updateTokenRequest: false,\r\n        updateTokenFailed: true,\r\n        updateTokenMessage: action.err\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  };\r\n};\r\n","import { SET_MODAL, RESET_MODAL } from '../actions/action-types/modal';\r\nimport { TModalActions } from '../types/actions';\r\nimport { TModal } from '../types/data';\r\n\r\n\r\nexport type TModalState = {\r\n  isOpened: boolean,\r\n  content: TModal\r\n}\r\n\r\nconst initialState: TModalState = {\r\n  isOpened: false,\r\n  content: ''\r\n};\r\n\r\n\r\n\r\nexport const modalReducer = (state = initialState, action: TModalActions): TModalState => {\r\n  switch (action.type) {\r\n    case SET_MODAL: {\r\n      return {\r\n        isOpened: true,\r\n        content: action.content\r\n      }\r\n    }\r\n    case RESET_MODAL: {\r\n      return initialState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  };\r\n};\r\n","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_DISCONNECT,\r\n    WS_GET_MESSAGE\r\n} from '../actions/action-types/webSocket';\r\nimport { TWsActions } from '../types/actions';\r\nimport { IOrderDataResponse } from '../types/data';\r\n\r\n\r\n\r\nexport type TWsState = {\r\n  wsConnected: boolean,\r\n  error: undefined | string | Event,\r\n  orders: IOrderDataResponse[],\r\n  total: number,\r\n  totalToday: number\r\n}\r\n\r\nconst initialState: TWsState = {\r\n    wsConnected: false,\r\n    error: undefined,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0\r\n}\r\n\r\nexport const wsReducer = (state = initialState, action: TWsActions): TWsState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_SUCCESS: {\r\n            console.log('REDUCER: WS connection open successfully!');\r\n\r\n            return {\r\n                ...state,\r\n                wsConnected: true\r\n            };\r\n        }\r\n        case WS_CONNECTION_ERROR: {\r\n            console.log('REDUCER: An WS connection error occured!');\r\n\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                error: action.payload\r\n            };\r\n        }\r\n        case WS_CONNECTION_DISCONNECT: {\r\n            console.log('REDUCER: WS connection was closed!');\r\n\r\n            return initialState;\r\n        }\r\n        case WS_GET_MESSAGE: {\r\n            console.log('REDUCER: A message was received over WS!');\r\n\r\n            return {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    };\r\n};\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport { allIngredientsReducer } from './allIngredients';\r\nimport { constructorIngredientsReducer } from './constructorIngredients';\r\nimport { orderDataReducer } from './orderData';\r\nimport { authReducer } from './auth';\r\nimport { modalReducer } from './modal';\r\nimport { wsReducer } from './webSocket';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  allIngredients: allIngredientsReducer,\r\n  constructorIngredients: constructorIngredientsReducer,\r\n  orderData: orderDataReducer,\r\n  auth: authReducer,\r\n  modal: modalReducer,\r\n  ws: wsReducer\r\n});\r\n","import { compose, applyMiddleware, legacy_createStore as createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/index';\r\nimport {\r\n  WS_CONNECTION_OPEN,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSE,\r\n  WS_CONNECTION_DISCONNECT,\r\n  WS_GET_MESSAGE/* ,\r\n  WS_SEND_MESSAGE */\r\n} from './actions/action-types/webSocket';\r\nimport { socketMiddleware } from './middleware/webSocketMiddleware';\r\nimport { WS_URL } from '../utils/constants';\r\nimport { TWsActions, TWsInitConnectionAction } from './types/actions';\r\nimport { wsInitConnection, WsInitConnectionAction } from './actions/webSocket';\r\n\r\n\r\n\r\nconst wsActions = {\r\n  wsInit: WS_CONNECTION_OPEN,\r\n  wsOnOpen: WS_CONNECTION_SUCCESS,\r\n  wsOnError: WS_CONNECTION_ERROR,\r\n  wsOnClose: WS_CONNECTION_CLOSE,\r\n  wsDisconnect: WS_CONNECTION_DISCONNECT,\r\n  wsOnMessage: WS_GET_MESSAGE/* ,\r\n  wsSendMessage: WS_SEND_MESSAGE */\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(WS_URL, wsActions)));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n/* import { compose, createStore, applyMiddleware } from 'redux'; */\r\nimport { Provider } from 'react-redux';\r\n/* import thunk from 'redux-thunk';\r\nimport { rootReducer } from './services/reducers/index'; */\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { store } from './services/store';\r\n/* import {\r\n  WS_CONNECTION_OPEN,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSE,\r\n  WS_CONNECTION_DISCONNECT,\r\n  WS_GET_MESSAGE,\r\n  WS_SEND_MESSAGE\r\n} from './services/actions/webSocket';\r\nimport { socketMiddleware } from './services/middleware/webSocketMiddleware';\r\nimport { WS_URL } from './utils/constants'; */\r\n\r\n\r\n/* const wsActions = {\r\n  wsInit: WS_CONNECTION_OPEN,\r\n  wsOnOpen: WS_CONNECTION_SUCCESS,\r\n  wsOnError: WS_CONNECTION_ERROR,\r\n  wsOnClose: WS_CONNECTION_CLOSE,\r\n  wsDisconnect: WS_CONNECTION_DISCONNECT,\r\n  wsOnMessage: WS_GET_MESSAGE,\r\n  wsSendMessage: WS_SEND_MESSAGE\r\n} */\r\n\r\n/* const composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'development'\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(WS_URL, wsActions)));\r\n\r\nconst store = createStore(rootReducer, enhancer); */\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n  , document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppHeader_header__GzFSM\",\"content\":\"AppHeader_content__2E_d6\",\"list\":\"AppHeader_list__2BWfb\",\"link\":\"AppHeader_link__3A4Gk\",\"activeLink\":\"AppHeader_activeLink__1bHVH\",\"personalCab\":\"AppHeader_personalCab__1uZYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"BurgerIngredients_section__127SR\",\"tabs\":\"BurgerIngredients_tabs__3Iun7\",\"link\":\"BurgerIngredients_link__1omiy\",\"categoryList\":\"BurgerIngredients_categoryList__72tYy\",\"ingredientsList\":\"BurgerIngredients_ingredientsList__2zE4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"BurgerConstructor_section__19U58\",\"positionsList\":\"BurgerConstructor_positionsList__2qzo0\",\"hoveredList\":\"BurgerConstructor_hoveredList__tcemS\",\"lockedPosition\":\"BurgerConstructor_lockedPosition__36bdi\",\"chosenPositionsList\":\"BurgerConstructor_chosenPositionsList__1OI75\",\"chosenPositionsList_overflowY_scroll\":\"BurgerConstructor_chosenPositionsList_overflowY_scroll__Z4XoH\",\"chosenPositionsList_overflowY_hidden\":\"BurgerConstructor_chosenPositionsList_overflowY_hidden__1gFsD\",\"infoGroup\":\"BurgerConstructor_infoGroup__3Xg0C\",\"priceGroup\":\"BurgerConstructor_priceGroup__3X7Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"Navigation_navContainer__3fZrN\",\"list\":\"Navigation_list__bvpv4\",\"listItem\":\"Navigation_listItem__2Lg1U\",\"navigationLink\":\"Navigation_navigationLink__3jEAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Order_container__Cw-RL\",\"groupIdDate\":\"Order_groupIdDate__1Milz\",\"dateTimezoneOffset\":\"Order_dateTimezoneOffset__60onY\",\"groupImagesPrice\":\"Order_groupImagesPrice__3yZj4\",\"groupPrice\":\"Order_groupPrice__2B57A\",\"list\":\"Order_list__1PQSh\",\"listItem\":\"Order_listItem__3oYfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"IngredientDetails_content__2l3Y8\",\"image\":\"IngredientDetails_image__2FBNq\",\"propertiesList\":\"IngredientDetails_propertiesList__3k-9_\",\"propertiesListItem\":\"IngredientDetails_propertiesListItem__2v2pX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFoundPage_container__Jtql0\",\"h1\":\"NotFoundPage_h1__2KhC3\",\"p1\":\"NotFoundPage_p1__3M2Yq\",\"p2\":\"NotFoundPage_p2__3VviQ\",\"navigationBlock\":\"NotFoundPage_navigationBlock__2KuGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"commonStyles_main__1jfEx\",\"container\":\"commonStyles_container__3LkLR\",\"form\":\"commonStyles_form__1CR5G\",\"navigationBlock\":\"commonStyles_navigationBlock__2LFpL\",\"navigationLink\":\"commonStyles_navigationLink__1JpJc\",\"navigationLinkActive\":\"commonStyles_navigationLinkActive__2QurY\",\"statusDone\":\"commonStyles_statusDone__2AJTv\",\"statusCancelled\":\"commonStyles_statusCancelled__2ak8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Ingredient_content__KN6EH\",\"image\":\"Ingredient_image__4bwdy\",\"priceGroup\":\"Ingredient_priceGroup__3MTpa\",\"link\":\"Ingredient_link__3l8mn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__3SvF6\",\"titleButtonGroup\":\"Modal_titleButtonGroup__NCEKe\",\"closeButton\":\"Modal_closeButton__3IDWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconContainer\":\"IngredientIcon_iconContainer__263on\",\"image\":\"IngredientIcon_image__2pzO3\",\"overlay\":\"IngredientIcon_overlay__pf_9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"OrderInfo_content__2iDah\",\"header\":\"OrderInfo_header__1sXIO\",\"image\":\"OrderInfo_image__27C5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"BurgerConstructorItem_listItem__MD5zM\",\"hoveredItem\":\"BurgerConstructorItem_hoveredItem__1AOTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfilePage_container__1S0aM\",\"profileContainer\":\"ProfilePage_profileContainer__3GThm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrdersPage_container__34kfo\",\"ordersListContainer\":\"OrdersPage_ordersListContainer__3jZGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"OrdersList_list__1q3pw\",\"link\":\"OrdersList_link__TxmlE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedPage_container__RICcg\",\"ordersListContainer\":\"FeedPage_ordersListContainer__39qhJ\"};"],"sourceRoot":""}